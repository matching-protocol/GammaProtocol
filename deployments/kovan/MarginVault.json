{
  "address": "0x6a5862B765e44C5Ed430C2fa7e84CA4ADd5861A5",
  "abi": [],
  "transactionHash": "0xa4154528ba56ffa58ec1009a62123ca05d6c99703c6f98d765dec72a067767b7",
  "receipt": {
    "to": null,
    "from": "0x3F57a38577F92adC561D8f4504832dCc34000f11",
    "contractAddress": "0x6a5862B765e44C5Ed430C2fa7e84CA4ADd5861A5",
    "transactionIndex": 3,
    "gasUsed": "636316",
    "logsBloom": "0x
    "blockHash": "0x39f6b3d9f4b8b5f167452470a6e1fbff4271e47d1854508ef2c341de5bf9570c",
    "transactionHash": "0xa4154528ba56ffa58ec1009a62123ca05d6c99703c6f98d765dec72a067767b7",
    "logs": [],
    "blockNumber": 29998410,
    "cumulativeGasUsed": "851194",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e64f7796e753573a0d4471a5ea61f62d",
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Opyn Team\",\"methods\":{\"addCollateral(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"increase the collateral balance in a vault\",\"params\":{\"_amount\":\"number of _collateralAsset being added to the user's vault\",\"_collateralAsset\":\"address of the _collateralAsset being added to the user's vault\",\"_index\":\"index of _collateralAsset in the user's vault.collateralAssets array\",\"_vault\":\"vault to add collateral to\"}},\"addLong(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"increase the long oToken balance in a vault when an oToken is deposited\",\"params\":{\"_amount\":\"number of _longOtoken the protocol is adding to the user's vault\",\"_index\":\"index of _longOtoken in the user's vault.longOtokens array\",\"_longOtoken\":\"address of the _longOtoken being added to the user's vault\",\"_vault\":\"vault to add a long position to\"}},\"addShort(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"increase the short oToken balance in a vault when a new oToken is minted\",\"params\":{\"_amount\":\"number of _shortOtoken being minted from the user's vault\",\"_index\":\"index of _shortOtoken in the user's vault.shortOtokens array\",\"_shortOtoken\":\"address of the _shortOtoken being minted from the user's vault\",\"_vault\":\"vault to add or increase the short position in\"}},\"removeCollateral(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"decrease the collateral balance in a vault\",\"params\":{\"_amount\":\"number of _collateralAsset being removed from the user's vault\",\"_collateralAsset\":\"address of the _collateralAsset being removed from the user's vault\",\"_index\":\"index of _collateralAsset in the user's vault.collateralAssets array\",\"_vault\":\"vault to remove collateral from\"}},\"removeLong(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"decrease the long oToken balance in a vault when an oToken is withdrawn\",\"params\":{\"_amount\":\"number of _longOtoken the protocol is removing from the user's vault\",\"_index\":\"index of _longOtoken in the user's vault.longOtokens array\",\"_longOtoken\":\"address of the _longOtoken being removed from the user's vault\",\"_vault\":\"vault to remove a long position from\"}},\"removeShort(MarginVault.Vault storage,address,uint256,uint256)\":{\"details\":\"decrease the short oToken balance in a vault when an oToken is burned\",\"params\":{\"_amount\":\"number of _shortOtoken being reduced in the user's vault\",\"_index\":\"index of _shortOtoken in the user's vault.shortOtokens array\",\"_shortOtoken\":\"address of the _shortOtoken being reduced in the user's vault\",\"_vault\":\"vault to decrease short position in\"}}},\"title\":\"MarginVault\"},\"userdoc\":{\"methods\":{},\"notice\":\"A library that provides the Controller with a Vault struct and the functions that manipulate vaults. Vaults describe discrete position combinations of long options, short options, and collateral assets that a user can have.\"}},\"settings\":{\"compilationTarget\":{\"contracts/libs/MarginVault.sol\":\"MarginVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libs/MarginVault.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: UNLICENSED\\n */\\npragma solidity =0.6.10;\\n\\npragma experimental ABIEncoderV2;\\n\\nimport {SafeMath} from \\\"../packages/oz/SafeMath.sol\\\";\\n\\n/**\\n * MarginVault Error Codes\\n * V1: invalid short otoken amount\\n * V2: invalid short otoken index\\n * V3: short otoken address mismatch\\n * V4: invalid long otoken amount\\n * V5: invalid long otoken index\\n * V6: long otoken address mismatch\\n * V7: invalid collateral amount\\n * V8: invalid collateral token index\\n * V9: collateral token address mismatch\\n */\\n\\n/**\\n * @title MarginVault\\n * @author Opyn Team\\n * @notice A library that provides the Controller with a Vault struct and the functions that manipulate vaults.\\n * Vaults describe discrete position combinations of long options, short options, and collateral assets that a user can have.\\n */\\nlibrary MarginVault {\\n    using SafeMath for uint256;\\n\\n    // vault is a struct of 6 arrays that describe a position a user has, a user can have multiple vaults.\\n    struct Vault {\\n        // addresses of oTokens a user has shorted (i.e. written) against this vault\\n        address[] shortOtokens;\\n        // addresses of oTokens a user has bought and deposited in this vault\\n        // user can be long oTokens without opening a vault (e.g. by buying on a DEX)\\n        // generally, long oTokens will be 'deposited' in vaults to act as collateral in order to write oTokens against (i.e. in spreads)\\n        address[] longOtokens;\\n        // addresses of other ERC-20s a user has deposited as collateral in this vault\\n        address[] collateralAssets;\\n        // quantity of oTokens minted/written for each oToken address in shortOtokens\\n        uint256[] shortAmounts;\\n        // quantity of oTokens owned and held in the vault for each oToken address in longOtokens\\n        uint256[] longAmounts;\\n        // quantity of ERC-20 deposited as collateral in the vault for each ERC-20 address in collateralAssets\\n        uint256[] collateralAmounts;\\n    }\\n\\n    /**\\n     * @dev increase the short oToken balance in a vault when a new oToken is minted\\n     * @param _vault vault to add or increase the short position in\\n     * @param _shortOtoken address of the _shortOtoken being minted from the user's vault\\n     * @param _amount number of _shortOtoken being minted from the user's vault\\n     * @param _index index of _shortOtoken in the user's vault.shortOtokens array\\n     */\\n    function addShort(\\n        Vault storage _vault,\\n        address _shortOtoken,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        require(_amount > 0, \\\"V1\\\");\\n\\n        // valid indexes in any array are between 0 and array.length - 1.\\n        // if adding an amount to an preexisting short oToken, check that _index is in the range of 0->length-1\\n        if ((_index == _vault.shortOtokens.length) && (_index == _vault.shortAmounts.length)) {\\n            _vault.shortOtokens.push(_shortOtoken);\\n            _vault.shortAmounts.push(_amount);\\n        } else {\\n            require((_index < _vault.shortOtokens.length) && (_index < _vault.shortAmounts.length), \\\"V2\\\");\\n            address existingShort = _vault.shortOtokens[_index];\\n            require((existingShort == _shortOtoken) || (existingShort == address(0)), \\\"V3\\\");\\n\\n            _vault.shortAmounts[_index] = _vault.shortAmounts[_index].add(_amount);\\n            _vault.shortOtokens[_index] = _shortOtoken;\\n        }\\n    }\\n\\n    /**\\n     * @dev decrease the short oToken balance in a vault when an oToken is burned\\n     * @param _vault vault to decrease short position in\\n     * @param _shortOtoken address of the _shortOtoken being reduced in the user's vault\\n     * @param _amount number of _shortOtoken being reduced in the user's vault\\n     * @param _index index of _shortOtoken in the user's vault.shortOtokens array\\n     */\\n    function removeShort(\\n        Vault storage _vault,\\n        address _shortOtoken,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        // check that the removed short oToken exists in the vault at the specified index\\n        require(_index < _vault.shortOtokens.length, \\\"V2\\\");\\n        require(_vault.shortOtokens[_index] == _shortOtoken, \\\"V3\\\");\\n\\n        uint256 newShortAmount = _vault.shortAmounts[_index].sub(_amount);\\n\\n        if (newShortAmount == 0) {\\n            delete _vault.shortOtokens[_index];\\n        }\\n        _vault.shortAmounts[_index] = newShortAmount;\\n    }\\n\\n    /**\\n     * @dev increase the long oToken balance in a vault when an oToken is deposited\\n     * @param _vault vault to add a long position to\\n     * @param _longOtoken address of the _longOtoken being added to the user's vault\\n     * @param _amount number of _longOtoken the protocol is adding to the user's vault\\n     * @param _index index of _longOtoken in the user's vault.longOtokens array\\n     */\\n    function addLong(\\n        Vault storage _vault,\\n        address _longOtoken,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        require(_amount > 0, \\\"V4\\\");\\n\\n        // valid indexes in any array are between 0 and array.length - 1.\\n        // if adding an amount to an preexisting short oToken, check that _index is in the range of 0->length-1\\n        if ((_index == _vault.longOtokens.length) && (_index == _vault.longAmounts.length)) {\\n            _vault.longOtokens.push(_longOtoken);\\n            _vault.longAmounts.push(_amount);\\n        } else {\\n            require((_index < _vault.longOtokens.length) && (_index < _vault.longAmounts.length), \\\"V5\\\");\\n            address existingLong = _vault.longOtokens[_index];\\n            require((existingLong == _longOtoken) || (existingLong == address(0)), \\\"V6\\\");\\n\\n            _vault.longAmounts[_index] = _vault.longAmounts[_index].add(_amount);\\n            _vault.longOtokens[_index] = _longOtoken;\\n        }\\n    }\\n\\n    /**\\n     * @dev decrease the long oToken balance in a vault when an oToken is withdrawn\\n     * @param _vault vault to remove a long position from\\n     * @param _longOtoken address of the _longOtoken being removed from the user's vault\\n     * @param _amount number of _longOtoken the protocol is removing from the user's vault\\n     * @param _index index of _longOtoken in the user's vault.longOtokens array\\n     */\\n    function removeLong(\\n        Vault storage _vault,\\n        address _longOtoken,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        // check that the removed long oToken exists in the vault at the specified index\\n        require(_index < _vault.longOtokens.length, \\\"V5\\\");\\n        require(_vault.longOtokens[_index] == _longOtoken, \\\"V6\\\");\\n\\n        uint256 newLongAmount = _vault.longAmounts[_index].sub(_amount);\\n\\n        if (newLongAmount == 0) {\\n            delete _vault.longOtokens[_index];\\n        }\\n        _vault.longAmounts[_index] = newLongAmount;\\n    }\\n\\n    /**\\n     * @dev increase the collateral balance in a vault\\n     * @param _vault vault to add collateral to\\n     * @param _collateralAsset address of the _collateralAsset being added to the user's vault\\n     * @param _amount number of _collateralAsset being added to the user's vault\\n     * @param _index index of _collateralAsset in the user's vault.collateralAssets array\\n     */\\n    function addCollateral(\\n        Vault storage _vault,\\n        address _collateralAsset,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        require(_amount > 0, \\\"V7\\\");\\n\\n        // valid indexes in any array are between 0 and array.length - 1.\\n        // if adding an amount to an preexisting short oToken, check that _index is in the range of 0->length-1\\n        if ((_index == _vault.collateralAssets.length) && (_index == _vault.collateralAmounts.length)) {\\n            _vault.collateralAssets.push(_collateralAsset);\\n            _vault.collateralAmounts.push(_amount);\\n        } else {\\n            require((_index < _vault.collateralAssets.length) && (_index < _vault.collateralAmounts.length), \\\"V8\\\");\\n            address existingCollateral = _vault.collateralAssets[_index];\\n            require((existingCollateral == _collateralAsset) || (existingCollateral == address(0)), \\\"V9\\\");\\n\\n            _vault.collateralAmounts[_index] = _vault.collateralAmounts[_index].add(_amount);\\n            _vault.collateralAssets[_index] = _collateralAsset;\\n        }\\n    }\\n\\n    /**\\n     * @dev decrease the collateral balance in a vault\\n     * @param _vault vault to remove collateral from\\n     * @param _collateralAsset address of the _collateralAsset being removed from the user's vault\\n     * @param _amount number of _collateralAsset being removed from the user's vault\\n     * @param _index index of _collateralAsset in the user's vault.collateralAssets array\\n     */\\n    function removeCollateral(\\n        Vault storage _vault,\\n        address _collateralAsset,\\n        uint256 _amount,\\n        uint256 _index\\n    ) external {\\n        // check that the removed collateral exists in the vault at the specified index\\n        require(_index < _vault.collateralAssets.length, \\\"V8\\\");\\n        require(_vault.collateralAssets[_index] == _collateralAsset, \\\"V9\\\");\\n\\n        uint256 newCollateralAmount = _vault.collateralAmounts[_index].sub(_amount);\\n\\n        if (newCollateralAmount == 0) {\\n            delete _vault.collateralAssets[_index];\\n        }\\n        _vault.collateralAmounts[_index] = newCollateralAmount;\\n    }\\n}\\n\",\"keccak256\":\"0x85575520bb91e02686e7dff4eb9ad9c461666bb68243d9105d36848f0ae89152\",\"license\":\"UNLICENSED\"},\"contracts/packages/oz/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// openzeppelin-contracts v3.1.0\\n\\n/* solhint-disable */\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xe257e662689b978c321f9618441d4e0233276acea88093d3d344873592636c18\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x610a8d610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80637b5c2835146100715780637e5d2ac014610093578063951dd8d3146100b3578063aadf9398146100d3578063e02ff740146100f3578063ef682c1b14610113575b600080fd5b81801561007d57600080fd5b5061009161008c36600461088a565b610133565b005b81801561009f57600080fd5b506100916100ae36600461088a565b610228565b8180156100bf57600080fd5b506100916100ce36600461088a565b6103cb565b8180156100df57600080fd5b506100916100ee36600461088a565b61048e565b8180156100ff57600080fd5b5061009161010e36600461088a565b6105e1565b81801561011f57600080fd5b5061009161012e36600461088a565b6106a4565b8354811061015c5760405162461bcd60e51b815260040161015390610924565b60405180910390fd5b826001600160a01b031684600001828154811061017557fe5b6000918252602090912001546001600160a01b0316146101a75760405162461bcd60e51b815260040161015390610993565b60006101d5838660030184815481106101bc57fe5b90600052602060002001546107f090919063ffffffff16565b905080610205578460000182815481106101eb57fe5b600091825260209091200180546001600160a01b03191690555b8085600301838154811061021557fe5b6000918252602090912001555050505050565b600082116102485760405162461bcd60e51b815260040161015390610977565b60028401548114801561025e5750600584015481145b156102ae57600284018054600180820183556000928352602080842090920180546001600160a01b0319166001600160a01b038816179055600587018054918201815583529120018290556103c5565b6002840154811080156102c45750600584015481105b6102e05760405162461bcd60e51b815260040161015390610a03565b60008460020182815481106102f157fe5b6000918252602090912001546001600160a01b039081169150841681148061032057506001600160a01b038116155b61033c5760405162461bcd60e51b815260040161015390610a1f565b6103688386600501848154811061034f57fe5b906000526020600020015461083990919063ffffffff16565b85600501838154811061037757fe5b90600052602060002001819055508385600201838154811061039557fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505b50505050565b600184015481106103ee5760405162461bcd60e51b8152600401610153906109cb565b826001600160a01b031684600101828154811061040757fe5b6000918252602090912001546001600160a01b0316146104395760405162461bcd60e51b815260040161015390610a3b565b600061044e838660040184815481106101bc57fe5b90508061047e5784600101828154811061046457fe5b600091825260209091200180546001600160a01b03191690555b8085600401838154811061021557fe5b600082116104ae5760405162461bcd60e51b8152600401610153906109e7565b6001840154811480156104c45750600484015481145b15610513576001848101805480830182556000918252602080832090910180546001600160a01b0319166001600160a01b038816179055600487018054938401815582529020018290556103c5565b6001840154811080156105295750600484015481105b6105455760405162461bcd60e51b8152600401610153906109cb565b600084600101828154811061055657fe5b6000918252602090912001546001600160a01b039081169150841681148061058557506001600160a01b038116155b6105a15760405162461bcd60e51b815260040161015390610a3b565b6105b48386600401848154811061034f57fe5b8560040183815481106105c357fe5b90600052602060002001819055508385600101838154811061039557fe5b600284015481106106045760405162461bcd60e51b815260040161015390610a03565b826001600160a01b031684600201828154811061061d57fe5b6000918252602090912001546001600160a01b03161461064f5760405162461bcd60e51b815260040161015390610a1f565b6000610664838660050184815481106101bc57fe5b9050806106945784600201828154811061067a57fe5b600091825260209091200180546001600160a01b03191690555b8085600501838154811061021557fe5b600082116106c45760405162461bcd60e51b8152600401610153906109af565b8354811480156106d75750600384015481145b15610725578354600180820186556000868152602080822090930180546001600160a01b0319166001600160a01b0388161790556003870180549283018155815291909120018290556103c5565b8354811080156107385750600384015481105b6107545760405162461bcd60e51b815260040161015390610924565b600084600001828154811061076557fe5b6000918252602090912001546001600160a01b039081169150841681148061079457506001600160a01b038116155b6107b05760405162461bcd60e51b815260040161015390610993565b6107c38386600301848154811061034f57fe5b8560030183815481106107d257fe5b90600052602060002001819055508385600001838154811061039557fe5b600061083283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061085e565b9392505050565b6000828201838110156108325760405162461bcd60e51b815260040161015390610940565b600081848411156108825760405162461bcd60e51b815260040161015391906108d1565b505050900390565b6000806000806080858703121561089f578384fd5b8435935060208501356001600160a01b03811681146108bc578384fd5b93969395505050506040820135916060013590565b6000602080835283518082850152825b818110156108fd578581018301518582016040015282016108e1565b8181111561090e5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600290820152612b1960f11b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b602080825260029082015261563760f01b604082015260600190565b602080825260029082015261563360f01b604082015260600190565b602080825260029082015261563160f01b604082015260600190565b602080825260029082015261563560f01b604082015260600190565b602080825260029082015261158d60f21b604082015260600190565b6020808252600290820152610ac760f31b604082015260600190565b602080825260029082015261563960f01b604082015260600190565b6020808252600290820152612b1b60f11b60408201526060019056fea264697066735822122041d7214381760c0f626ac385ed16b1bfd01085a6d664616e09ec6fb608240c5564736f6c634300060a0033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c80637b5c2835146100715780637e5d2ac014610093578063951dd8d3146100b3578063aadf9398146100d3578063e02ff740146100f3578063ef682c1b14610113575b600080fd5b81801561007d57600080fd5b5061009161008c36600461088a565b610133565b005b81801561009f57600080fd5b506100916100ae36600461088a565b610228565b8180156100bf57600080fd5b506100916100ce36600461088a565b6103cb565b8180156100df57600080fd5b506100916100ee36600461088a565b61048e565b8180156100ff57600080fd5b5061009161010e36600461088a565b6105e1565b81801561011f57600080fd5b5061009161012e36600461088a565b6106a4565b8354811061015c5760405162461bcd60e51b815260040161015390610924565b60405180910390fd5b826001600160a01b031684600001828154811061017557fe5b6000918252602090912001546001600160a01b0316146101a75760405162461bcd60e51b815260040161015390610993565b60006101d5838660030184815481106101bc57fe5b90600052602060002001546107f090919063ffffffff16565b905080610205578460000182815481106101eb57fe5b600091825260209091200180546001600160a01b03191690555b8085600301838154811061021557fe5b6000918252602090912001555050505050565b600082116102485760405162461bcd60e51b815260040161015390610977565b60028401548114801561025e5750600584015481145b156102ae57600284018054600180820183556000928352602080842090920180546001600160a01b0319166001600160a01b038816179055600587018054918201815583529120018290556103c5565b6002840154811080156102c45750600584015481105b6102e05760405162461bcd60e51b815260040161015390610a03565b60008460020182815481106102f157fe5b6000918252602090912001546001600160a01b039081169150841681148061032057506001600160a01b038116155b61033c5760405162461bcd60e51b815260040161015390610a1f565b6103688386600501848154811061034f57fe5b906000526020600020015461083990919063ffffffff16565b85600501838154811061037757fe5b90600052602060002001819055508385600201838154811061039557fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550505b50505050565b600184015481106103ee5760405162461bcd60e51b8152600401610153906109cb565b826001600160a01b031684600101828154811061040757fe5b6000918252602090912001546001600160a01b0316146104395760405162461bcd60e51b815260040161015390610a3b565b600061044e838660040184815481106101bc57fe5b90508061047e5784600101828154811061046457fe5b600091825260209091200180546001600160a01b03191690555b8085600401838154811061021557fe5b600082116104ae5760405162461bcd60e51b8152600401610153906109e7565b6001840154811480156104c45750600484015481145b15610513576001848101805480830182556000918252602080832090910180546001600160a01b0319166001600160a01b038816179055600487018054938401815582529020018290556103c5565b6001840154811080156105295750600484015481105b6105455760405162461bcd60e51b8152600401610153906109cb565b600084600101828154811061055657fe5b6000918252602090912001546001600160a01b039081169150841681148061058557506001600160a01b038116155b6105a15760405162461bcd60e51b815260040161015390610a3b565b6105b48386600401848154811061034f57fe5b8560040183815481106105c357fe5b90600052602060002001819055508385600101838154811061039557fe5b600284015481106106045760405162461bcd60e51b815260040161015390610a03565b826001600160a01b031684600201828154811061061d57fe5b6000918252602090912001546001600160a01b03161461064f5760405162461bcd60e51b815260040161015390610a1f565b6000610664838660050184815481106101bc57fe5b9050806106945784600201828154811061067a57fe5b600091825260209091200180546001600160a01b03191690555b8085600501838154811061021557fe5b600082116106c45760405162461bcd60e51b8152600401610153906109af565b8354811480156106d75750600384015481145b15610725578354600180820186556000868152602080822090930180546001600160a01b0319166001600160a01b0388161790556003870180549283018155815291909120018290556103c5565b8354811080156107385750600384015481105b6107545760405162461bcd60e51b815260040161015390610924565b600084600001828154811061076557fe5b6000918252602090912001546001600160a01b039081169150841681148061079457506001600160a01b038116155b6107b05760405162461bcd60e51b815260040161015390610993565b6107c38386600301848154811061034f57fe5b8560030183815481106107d257fe5b90600052602060002001819055508385600001838154811061039557fe5b600061083283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061085e565b9392505050565b6000828201838110156108325760405162461bcd60e51b815260040161015390610940565b600081848411156108825760405162461bcd60e51b815260040161015391906108d1565b505050900390565b6000806000806080858703121561089f578384fd5b8435935060208501356001600160a01b03811681146108bc578384fd5b93969395505050506040820135916060013590565b6000602080835283518082850152825b818110156108fd578581018301518582016040015282016108e1565b8181111561090e5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252600290820152612b1960f11b604082015260600190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b602080825260029082015261563760f01b604082015260600190565b602080825260029082015261563360f01b604082015260600190565b602080825260029082015261563160f01b604082015260600190565b602080825260029082015261563560f01b604082015260600190565b602080825260029082015261158d60f21b604082015260600190565b6020808252600290820152610ac760f31b604082015260600190565b602080825260029082015261563960f01b604082015260600190565b6020808252600290820152612b1b60f11b60408201526060019056fea264697066735822122041d7214381760c0f626ac385ed16b1bfd01085a6d664616e09ec6fb608240c5564736f6c634300060a0033",
  "devdoc": {
    "author": "Opyn Team",
    "methods": {
      "addCollateral(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "increase the collateral balance in a vault",
        "params": {
          "_amount": "number of _collateralAsset being added to the user's vault",
          "_collateralAsset": "address of the _collateralAsset being added to the user's vault",
          "_index": "index of _collateralAsset in the user's vault.collateralAssets array",
          "_vault": "vault to add collateral to"
        }
      },
      "addLong(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "increase the long oToken balance in a vault when an oToken is deposited",
        "params": {
          "_amount": "number of _longOtoken the protocol is adding to the user's vault",
          "_index": "index of _longOtoken in the user's vault.longOtokens array",
          "_longOtoken": "address of the _longOtoken being added to the user's vault",
          "_vault": "vault to add a long position to"
        }
      },
      "addShort(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "increase the short oToken balance in a vault when a new oToken is minted",
        "params": {
          "_amount": "number of _shortOtoken being minted from the user's vault",
          "_index": "index of _shortOtoken in the user's vault.shortOtokens array",
          "_shortOtoken": "address of the _shortOtoken being minted from the user's vault",
          "_vault": "vault to add or increase the short position in"
        }
      },
      "removeCollateral(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "decrease the collateral balance in a vault",
        "params": {
          "_amount": "number of _collateralAsset being removed from the user's vault",
          "_collateralAsset": "address of the _collateralAsset being removed from the user's vault",
          "_index": "index of _collateralAsset in the user's vault.collateralAssets array",
          "_vault": "vault to remove collateral from"
        }
      },
      "removeLong(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "decrease the long oToken balance in a vault when an oToken is withdrawn",
        "params": {
          "_amount": "number of _longOtoken the protocol is removing from the user's vault",
          "_index": "index of _longOtoken in the user's vault.longOtokens array",
          "_longOtoken": "address of the _longOtoken being removed from the user's vault",
          "_vault": "vault to remove a long position from"
        }
      },
      "removeShort(MarginVault.Vault storage,address,uint256,uint256)": {
        "details": "decrease the short oToken balance in a vault when an oToken is burned",
        "params": {
          "_amount": "number of _shortOtoken being reduced in the user's vault",
          "_index": "index of _shortOtoken in the user's vault.shortOtokens array",
          "_shortOtoken": "address of the _shortOtoken being reduced in the user's vault",
          "_vault": "vault to decrease short position in"
        }
      }
    },
    "title": "MarginVault"
  },
  "userdoc": {
    "methods": {},
    "notice": "A library that provides the Controller with a Vault struct and the functions that manipulate vaults. Vaults describe discrete position combinations of long options, short options, and collateral assets that a user can have."
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}