{
  "address": "0xe6a0199CE6bedEa133B62461840852e42C4Bf6dB",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressBook",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "AssetFarmed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "FarmerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferToPool",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferToUser",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addressBook",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_asset",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_user",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amount",
          "type": "uint256[]"
        }
      ],
      "name": "batchTransferToPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_asset",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "_user",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amount",
          "type": "uint256[]"
        }
      ],
      "name": "batchTransferToUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "farm",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "farmer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getStoredBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_farmer",
          "type": "address"
        }
      ],
      "name": "setFarmer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferToPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferToUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0f2396e203e6c4248bb24876be4f9a250f16ad3059d686c3af254773d9bf5f63",
  "receipt": {
    "to": null,
    "from": "0x3F57a38577F92adC561D8f4504832dCc34000f11",
    "contractAddress": "0xe6a0199CE6bedEa133B62461840852e42C4Bf6dB",
    "transactionIndex": 2,
    "gasUsed": "1332400",
    "logsBloom": "0x
    "blockHash": "0x3a6d34a1a3e80abb1a9ecf906b1d32bf5014714630d40a090351dad00af6acf9",
    "transactionHash": "0x0f2396e203e6c4248bb24876be4f9a250f16ad3059d686c3af254773d9bf5f63",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 29998406,
        "transactionHash": "0x0f2396e203e6c4248bb24876be4f9a250f16ad3059d686c3af254773d9bf5f63",
        "address": "0xe6a0199CE6bedEa133B62461840852e42C4Bf6dB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000003f57a38577f92adc561d8f4504832dcc34000f11"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0x3a6d34a1a3e80abb1a9ecf906b1d32bf5014714630d40a090351dad00af6acf9"
      }
    ],
    "blockNumber": 29998406,
    "cumulativeGasUsed": "1419419",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5F7a9222fc10348D0A0AA3aBDC7A74cC90b7a385"
  ],
  "numDeployments": 1,
  "solcInputHash": "e64f7796e753573a0d4471a5ea61f62d",
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressBook\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"AssetFarmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"FarmerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferToPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferToUser\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressBook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_asset\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_user\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferToPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_asset\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"_user\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"}],\"name\":\"batchTransferToUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"farm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"farmer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getStoredBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_farmer\",\"type\":\"address\"}],\"name\":\"setFarmer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferToUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Opyn Team\",\"methods\":{\"batchTransferToPool(address[],address[],uint256[])\":{\"params\":{\"_amount\":\"amount of each token to transfer to pool\",\"_asset\":\"addresses of the assets to transfer\",\"_user\":\"addresses of the users to transfer assets to\"}},\"batchTransferToUser(address[],address[],uint256[])\":{\"params\":{\"_amount\":\"amount of each token to transfer to _user\",\"_asset\":\"addresses of the assets to transfer\",\"_user\":\"addresses of the users to transfer assets to\"}},\"constructor\":{\"params\":{\"_addressBook\":\"AddressBook module\"}},\"farm(address,address,uint256)\":{\"details\":\"can only be called by the farmer address. Do not farm otokens.\",\"params\":{\"_amount\":\"amount to remove from pool\",\"_asset\":\"asset address\",\"_receiver\":\"receiver address\"}},\"getStoredBalance(address)\":{\"params\":{\"_asset\":\"asset address\"},\"returns\":{\"_0\":\"asset balance\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFarmer(address)\":{\"details\":\"can only be called by MarginPool owner\",\"params\":{\"_farmer\":\"farmer address\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferToPool(address,address,uint256)\":{\"params\":{\"_amount\":\"amount of the token to transfer from _user\",\"_asset\":\"address of the asset to transfer\",\"_user\":\"address of the user to transfer assets from\"}},\"transferToUser(address,address,uint256)\":{\"params\":{\"_amount\":\"amount of the token to transfer to _user\",\"_asset\":\"address of the asset to transfer\",\"_user\":\"address of the user to transfer assets to\"}}},\"stateVariables\":{\"assetBalance\":{\"details\":\"mapping between an asset and the amount of the asset in the pool\"},\"farmer\":{\"details\":\"the address that has the ability to withdraw excess assets in the pool\"}},\"title\":\"MarginPool\"},\"userdoc\":{\"methods\":{\"addressBook()\":{\"notice\":\"AddressBook module\"},\"batchTransferToPool(address[],address[],uint256[])\":{\"notice\":\"transfers multiple assets from users to the pool\"},\"batchTransferToUser(address[],address[],uint256[])\":{\"notice\":\"transfers multiple assets from the pool to users\"},\"constructor\":\"contructor\",\"farm(address,address,uint256)\":{\"notice\":\"function to collect the excess balance of a particular asset\"},\"getStoredBalance(address)\":{\"notice\":\"get the stored balance of an asset\"},\"setFarmer(address)\":{\"notice\":\"function to set farmer address\"},\"transferToPool(address,address,uint256)\":{\"notice\":\"transfers an asset from a user to the pool\"},\"transferToUser(address,address,uint256)\":{\"notice\":\"transfers an asset from the pool to a user\"}},\"notice\":\"Contract that holds all protocol funds\"}},\"settings\":{\"compilationTarget\":{\"contracts/core/MarginPool.sol\":\"MarginPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/MarginPool.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: UNLICENSED\\n */\\npragma solidity =0.6.10;\\n\\nimport {ERC20Interface} from \\\"../interfaces/ERC20Interface.sol\\\";\\nimport {AddressBookInterface} from \\\"../interfaces/AddressBookInterface.sol\\\";\\nimport {SafeMath} from \\\"../packages/oz/SafeMath.sol\\\";\\nimport {SafeERC20} from \\\"../packages/oz/SafeERC20.sol\\\";\\nimport {Ownable} from \\\"../packages/oz/Ownable.sol\\\";\\n\\n/**\\n * @author Opyn Team\\n * @title MarginPool\\n * @notice Contract that holds all protocol funds\\n */\\ncontract MarginPool is Ownable {\\n    using SafeMath for uint256;\\n    using SafeERC20 for ERC20Interface;\\n\\n    /// @notice AddressBook module\\n    address public addressBook;\\n    /// @dev the address that has the ability to withdraw excess assets in the pool\\n    address public farmer;\\n    /// @dev mapping between an asset and the amount of the asset in the pool\\n    mapping(address => uint256) internal assetBalance;\\n\\n    /**\\n     * @notice contructor\\n     * @param _addressBook AddressBook module\\n     */\\n    constructor(address _addressBook) public {\\n        require(_addressBook != address(0), \\\"Invalid address book\\\");\\n\\n        addressBook = _addressBook;\\n    }\\n\\n    /// @notice emits an event when marginpool receive funds from controller\\n    event TransferToPool(address indexed asset, address indexed user, uint256 amount);\\n    /// @notice emits an event when marginpool transfer funds to controller\\n    event TransferToUser(address indexed asset, address indexed user, uint256 amount);\\n    /// @notice emit event after updating the farmer address\\n    event FarmerUpdated(address indexed oldAddress, address indexed newAddress);\\n    /// @notice emit event when an asset gets harvested from the pool\\n    event AssetFarmed(address indexed asset, address indexed receiver, uint256 amount);\\n\\n    /**\\n     * @notice check if the sender is the Controller module\\n     */\\n    modifier onlyController() {\\n        require(\\n            msg.sender == AddressBookInterface(addressBook).getController(),\\n            \\\"MarginPool: Sender is not Controller\\\"\\n        );\\n\\n        _;\\n    }\\n\\n    /**\\n     * @notice check if the sender is the farmer address\\n     */\\n    modifier onlyFarmer() {\\n        require(msg.sender == farmer, \\\"MarginPool: Sender is not farmer\\\");\\n\\n        _;\\n    }\\n\\n    /**\\n     * @notice transfers an asset from a user to the pool\\n     * @param _asset address of the asset to transfer\\n     * @param _user address of the user to transfer assets from\\n     * @param _amount amount of the token to transfer from _user\\n     */\\n    function transferToPool(\\n        address _asset,\\n        address _user,\\n        uint256 _amount\\n    ) public onlyController {\\n        require(_amount > 0, \\\"MarginPool: transferToPool amount is equal to 0\\\");\\n        assetBalance[_asset] = assetBalance[_asset].add(_amount);\\n\\n        // transfer _asset _amount from _user to pool\\n        ERC20Interface(_asset).safeTransferFrom(_user, address(this), _amount);\\n        emit TransferToPool(_asset, _user, _amount);\\n    }\\n\\n    /**\\n     * @notice transfers an asset from the pool to a user\\n     * @param _asset address of the asset to transfer\\n     * @param _user address of the user to transfer assets to\\n     * @param _amount amount of the token to transfer to _user\\n     */\\n    function transferToUser(\\n        address _asset,\\n        address _user,\\n        uint256 _amount\\n    ) public onlyController {\\n        require(_user != address(this), \\\"MarginPool: cannot transfer assets to oneself\\\");\\n        assetBalance[_asset] = assetBalance[_asset].sub(_amount);\\n\\n        // transfer _asset _amount from pool to _user\\n        ERC20Interface(_asset).safeTransfer(_user, _amount);\\n        emit TransferToUser(_asset, _user, _amount);\\n    }\\n\\n    /**\\n     * @notice get the stored balance of an asset\\n     * @param _asset asset address\\n     * @return asset balance\\n     */\\n    function getStoredBalance(address _asset) external view returns (uint256) {\\n        return assetBalance[_asset];\\n    }\\n\\n    /**\\n     * @notice transfers multiple assets from users to the pool\\n     * @param _asset addresses of the assets to transfer\\n     * @param _user addresses of the users to transfer assets to\\n     * @param _amount amount of each token to transfer to pool\\n     */\\n    function batchTransferToPool(\\n        address[] memory _asset,\\n        address[] memory _user,\\n        uint256[] memory _amount\\n    ) external onlyController {\\n        require(\\n            _asset.length == _user.length && _user.length == _amount.length,\\n            \\\"MarginPool: batchTransferToPool array lengths are not equal\\\"\\n        );\\n\\n        for (uint256 i = 0; i < _asset.length; i++) {\\n            // transfer _asset _amount from _user to pool\\n            transferToPool(_asset[i], _user[i], _amount[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice transfers multiple assets from the pool to users\\n     * @param _asset addresses of the assets to transfer\\n     * @param _user addresses of the users to transfer assets to\\n     * @param _amount amount of each token to transfer to _user\\n     */\\n    function batchTransferToUser(\\n        address[] memory _asset,\\n        address[] memory _user,\\n        uint256[] memory _amount\\n    ) external onlyController {\\n        require(\\n            _asset.length == _user.length && _user.length == _amount.length,\\n            \\\"MarginPool: batchTransferToUser array lengths are not equal\\\"\\n        );\\n\\n        for (uint256 i = 0; i < _asset.length; i++) {\\n            // transfer _asset _amount from pool to _user\\n            transferToUser(_asset[i], _user[i], _amount[i]);\\n        }\\n    }\\n\\n    /**\\n     * @notice function to collect the excess balance of a particular asset\\n     * @dev can only be called by the farmer address. Do not farm otokens.\\n     * @param _asset asset address\\n     * @param _receiver receiver address\\n     * @param _amount amount to remove from pool\\n     */\\n    function farm(\\n        address _asset,\\n        address _receiver,\\n        uint256 _amount\\n    ) external onlyFarmer {\\n        require(_receiver != address(0), \\\"MarginPool: invalid receiver address\\\");\\n\\n        uint256 externalBalance = ERC20Interface(_asset).balanceOf(address(this));\\n        uint256 storedBalance = assetBalance[_asset];\\n\\n        require(_amount <= externalBalance.sub(storedBalance), \\\"MarginPool: amount to farm exceeds limit\\\");\\n\\n        ERC20Interface(_asset).safeTransfer(_receiver, _amount);\\n\\n        emit AssetFarmed(_asset, _receiver, _amount);\\n    }\\n\\n    /**\\n     * @notice function to set farmer address\\n     * @dev can only be called by MarginPool owner\\n     * @param _farmer farmer address\\n     */\\n    function setFarmer(address _farmer) external onlyOwner {\\n        emit FarmerUpdated(farmer, _farmer);\\n\\n        farmer = _farmer;\\n    }\\n}\\n\",\"keccak256\":\"0x0007fedebd965d561bc0f43e3a6aaa879ce29a7e6c6ddc1bed20754b2f7a092e\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/AddressBookInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.6.10;\\n\\ninterface AddressBookInterface {\\n    /* Getters */\\n\\n    function getOtokenImpl() external view returns (address);\\n\\n    function getOtokenFactory() external view returns (address);\\n\\n    function getWhitelist() external view returns (address);\\n\\n    function getController() external view returns (address);\\n\\n    function getOracle() external view returns (address);\\n\\n    function getMarginPool() external view returns (address);\\n\\n    function getMarginCalculator() external view returns (address);\\n\\n    function getLiquidationManager() external view returns (address);\\n\\n    function getAddress(bytes32 _id) external view returns (address);\\n\\n    /* Setters */\\n\\n    function setOtokenImpl(address _otokenImpl) external;\\n\\n    function setOtokenFactory(address _factory) external;\\n\\n    function setOracleImpl(address _otokenImpl) external;\\n\\n    function setWhitelist(address _whitelist) external;\\n\\n    function setController(address _controller) external;\\n\\n    function setMarginPool(address _marginPool) external;\\n\\n    function setMarginCalculator(address _calculator) external;\\n\\n    function setLiquidationManager(address _liquidationManager) external;\\n\\n    function setAddress(bytes32 _id, address _newImpl) external;\\n}\\n\",\"keccak256\":\"0xf083b72d2476fc63b101130a044a7593a6bead41ba8c23482cafd7b7e2547687\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/ERC20Interface.sol\":{\"content\":\"/**\\n * SPDX-License-Identifier: UNLICENSED\\n */\\npragma solidity 0.6.10;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface ERC20Interface {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function decimals() external view returns (uint8);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x3dbc279a4929dcf32d2e39d1d7b0057c2805d9ef389222430bbe05a97ecae8b6\",\"license\":\"UNLICENSED\"},\"contracts/packages/oz/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// openzeppelin-contracts v3.1.0\\n\\npragma solidity ^0.6.2;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        return _functionCallWithValue(target, data, value, errorMessage);\\n    }\\n\\n    function _functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 weiValue,\\n        string memory errorMessage\\n    ) private returns (bytes memory) {\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(data);\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xacb7d8bfe55f4b53e4dfe128f5e15780401fe734fc28f239e9bf63cb5283c84c\",\"license\":\"MIT\"},\"contracts/packages/oz/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// openzeppelin-contracts v3.1.0\\n\\npragma solidity 0.6.10;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x35b3e8e1595be9615789db07354d46bf44adf46be977b76a467ad9edc092e950\",\"license\":\"MIT\"},\"contracts/packages/oz/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// openzeppelin-contracts v3.1.0\\n\\npragma solidity 0.6.10;\\n\\nimport \\\"./Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0xb6d430bc79061b7e7115f305f00c7d65e52d0cc9357eb5a9c88d4aa6fa643ec5\",\"license\":\"MIT\"},\"contracts/packages/oz/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// openzeppelin-contracts v3.1.0\\n\\n/* solhint-disable */\\npragma solidity ^0.6.0;\\n\\nimport \\\"../../interfaces/ERC20Interface.sol\\\";\\nimport \\\"./SafeMath.sol\\\";\\nimport \\\"./Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for ERC20Interface;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(\\n        ERC20Interface token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        ERC20Interface token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {ERC20Interface-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        ERC20Interface token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        ERC20Interface token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        ERC20Interface token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\\n            value,\\n            \\\"SafeERC20: decreased allowance below zero\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(ERC20Interface token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xace3a5f9ccd9044fccd6211415ec3d2e34d52655e7a8abbec023e54cc83e1ac5\",\"license\":\"MIT\"},\"contracts/packages/oz/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// openzeppelin-contracts v3.1.0\\n\\n/* solhint-disable */\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xe257e662689b978c321f9618441d4e0233276acea88093d3d344873592636c18\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161175e38038061175e8339818101604052602081101561003357600080fd5b505160006100486001600160e01b0361011216565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0381166100ed576040805162461bcd60e51b815260206004820152601460248201527f496e76616c6964206164647265737320626f6f6b000000000000000000000000604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610116565b3390565b611639806101256000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063d811fcf011610071578063d811fcf01461049f578063dd2c99f7146104a7578063e2ed781c146104dd578063f2fde38b14610503578063f5887cdd14610529578063fa93b2a514610531576100b4565b80634979cd14146100b9578063715018a61461026057806386a19c5e146102685780638da5cb5b1461040d578063baf46ba614610431578063c595b00714610467575b600080fd5b61025e600480360360608110156100cf57600080fd5b810190602081018135600160201b8111156100e957600080fd5b8201836020820111156100fb57600080fd5b803590602001918460208302840111600160201b8311171561011c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561016b57600080fd5b82018360208201111561017d57600080fd5b803590602001918460208302840111600160201b8311171561019e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156101ed57600080fd5b8201836020820111156101ff57600080fd5b803590602001918460208302840111600160201b8311171561022057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610567945050505050565b005b61025e6106d2565b61025e6004803603606081101561027e57600080fd5b810190602081018135600160201b81111561029857600080fd5b8201836020820111156102aa57600080fd5b803590602001918460208302840111600160201b831117156102cb57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561031a57600080fd5b82018360208201111561032c57600080fd5b803590602001918460208302840111600160201b8311171561034d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561039c57600080fd5b8201836020820111156103ae57600080fd5b803590602001918460208302840111600160201b831117156103cf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610786945050505050565b6104156108eb565b604080516001600160a01b039092168252519081900360200190f35b61025e6004803603606081101561044757600080fd5b506001600160a01b038135811691602081013590911690604001356108fa565b61048d6004803603602081101561047d57600080fd5b50356001600160a01b0316610aea565b60408051918252519081900360200190f35b610415610b05565b61025e600480360360608110156104bd57600080fd5b506001600160a01b03813581169160208101359091169060400135610b14565b61025e600480360360208110156104f357600080fd5b50356001600160a01b0316610cba565b61025e6004803603602081101561051957600080fd5b50356001600160a01b0316610d80565b610415610e8a565b61025e6004803603606081101561054757600080fd5b506001600160a01b03813581169160208101359091169060400135610e99565b600160009054906101000a90046001600160a01b03166001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105b557600080fd5b505afa1580156105c9573d6000803e3d6000fd5b505050506040513d60208110156105df57600080fd5b50516001600160a01b031633146106275760405162461bcd60e51b81526004018080602001828103825260248152602001806114c76024913960400191505060405180910390fd5b81518351148015610639575080518251145b6106745760405162461bcd60e51b815260040180806020018281038252603b815260200180611540603b913960400191505060405180910390fd5b60005b83518110156106cc576106c484828151811061068f57fe5b60200260200101518483815181106106a357fe5b60200260200101518484815181106106b757fe5b6020026020010151610b14565b600101610677565b50505050565b6106da611047565b6000546001600160a01b0390811691161461073c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600160009054906101000a90046001600160a01b03166001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107d457600080fd5b505afa1580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b50516001600160a01b031633146108465760405162461bcd60e51b81526004018080602001828103825260248152602001806114c76024913960400191505060405180910390fd5b81518351148015610858575080518251145b6108935760405162461bcd60e51b815260040180806020018281038252603b8152602001806115c9603b913960400191505060405180910390fd5b60005b83518110156106cc576108e38482815181106108ae57fe5b60200260200101518483815181106108c257fe5b60200260200101518484815181106108d657fe5b6020026020010151610e99565b600101610896565b6000546001600160a01b031690565b6002546001600160a01b03163314610959576040805162461bcd60e51b815260206004820181905260248201527f4d617267696e506f6f6c3a2053656e646572206973206e6f74206661726d6572604482015290519081900360640190fd5b6001600160a01b03821661099e5760405162461bcd60e51b815260040180806020018281038252602481526020018061157b6024913960400191505060405180910390fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038616916370a0823191602480820192602092909190829003018186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d6020811015610a1257600080fd5b50516001600160a01b038516600090815260036020526040902054909150610a40828263ffffffff61104b16565b831115610a7e5760405162461bcd60e51b81526004018080602001828103825260288152602001806115186028913960400191505060405180910390fd5b610a986001600160a01b038616858563ffffffff61109416565b836001600160a01b0316856001600160a01b03167f2bfce9f5efc2d7cd579270748ddf9d23bc6c0af5193a2759314c2300af9956b1856040518082815260200191505060405180910390a35050505050565b6001600160a01b031660009081526003602052604090205490565b6002546001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6257600080fd5b505afa158015610b76573d6000803e3d6000fd5b505050506040513d6020811015610b8c57600080fd5b50516001600160a01b03163314610bd45760405162461bcd60e51b81526004018080602001828103825260248152602001806114c76024913960400191505060405180910390fd5b60008111610c135760405162461bcd60e51b815260040180806020018281038252602f815260200180611472602f913960400191505060405180910390fd5b6001600160a01b038316600090815260036020526040902054610c3c908263ffffffff6110eb16565b6001600160a01b038416600081815260036020526040902091909155610c6a9083308463ffffffff61114516565b816001600160a01b0316836001600160a01b03167f9b4f8cdd00ca1dad21e1b00707351fe747dd74738cf95f60f66518c52c35e645836040518082815260200191505060405180910390a3505050565b610cc2611047565b6000546001600160a01b03908116911614610d24576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002546040516001600160a01b038084169216907fec2062989428d4fc69d3ba2664807361f4647daf215450588331bbe51efb6a6890600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b610d88611047565b6000546001600160a01b03908116911614610dea576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610e2f5760405162461bcd60e51b81526004018080602001828103825260268152602001806114a16026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ee757600080fd5b505afa158015610efb573d6000803e3d6000fd5b505050506040513d6020811015610f1157600080fd5b50516001600160a01b03163314610f595760405162461bcd60e51b81526004018080602001828103825260248152602001806114c76024913960400191505060405180910390fd5b6001600160a01b038216301415610fa15760405162461bcd60e51b815260040180806020018281038252602d8152602001806114eb602d913960400191505060405180910390fd5b6001600160a01b038316600090815260036020526040902054610fca908263ffffffff61104b16565b6001600160a01b038416600081815260036020526040902091909155610ff790838363ffffffff61109416565b816001600160a01b0316836001600160a01b03167f2d6ff46a316ec627f7677daafa6ad7d6f36bcf938c5f47bf6e671b09d27b415f836040518082815260200191505060405180910390a3505050565b3390565b600061108d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061119f565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526110e6908490611236565b505050565b60008282018381101561108d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526106cc908590611236565b6000818484111561122e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111f35781810151838201526020016111db565b50505050905090810190601f1680156112205780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b606061128b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112e79092919063ffffffff16565b8051909150156110e6578080602001905160208110156112aa57600080fd5b50516110e65760405162461bcd60e51b815260040180806020018281038252602a81526020018061159f602a913960400191505060405180910390fd5b60606112f684846000856112fe565b949350505050565b60606113098561146b565b61135a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106113995780518252601f19909201916020918201910161137a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146113fb576040519150601f19603f3d011682016040523d82523d6000602084013e611400565b606091505b509150915081156114145791506112f69050565b8051156114245780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156111f35781810151838201526020016111db565b3b15159056fe4d617267696e506f6f6c3a207472616e73666572546f506f6f6c20616d6f756e7420697320657175616c20746f20304f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d617267696e506f6f6c3a2053656e646572206973206e6f7420436f6e74726f6c6c65724d617267696e506f6f6c3a2063616e6e6f74207472616e736665722061737365747320746f206f6e6573656c664d617267696e506f6f6c3a20616d6f756e7420746f206661726d2065786365656473206c696d69744d617267696e506f6f6c3a2062617463685472616e73666572546f506f6f6c206172726179206c656e6774687320617265206e6f7420657175616c4d617267696e506f6f6c3a20696e76616c696420726563656976657220616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d617267696e506f6f6c3a2062617463685472616e73666572546f55736572206172726179206c656e6774687320617265206e6f7420657175616ca2646970667358221220f4dcf2eb183c6f07a075a0087f556adfa411825f6af606037fea8f0b8ee0db0a64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063d811fcf011610071578063d811fcf01461049f578063dd2c99f7146104a7578063e2ed781c146104dd578063f2fde38b14610503578063f5887cdd14610529578063fa93b2a514610531576100b4565b80634979cd14146100b9578063715018a61461026057806386a19c5e146102685780638da5cb5b1461040d578063baf46ba614610431578063c595b00714610467575b600080fd5b61025e600480360360608110156100cf57600080fd5b810190602081018135600160201b8111156100e957600080fd5b8201836020820111156100fb57600080fd5b803590602001918460208302840111600160201b8311171561011c57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561016b57600080fd5b82018360208201111561017d57600080fd5b803590602001918460208302840111600160201b8311171561019e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156101ed57600080fd5b8201836020820111156101ff57600080fd5b803590602001918460208302840111600160201b8311171561022057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610567945050505050565b005b61025e6106d2565b61025e6004803603606081101561027e57600080fd5b810190602081018135600160201b81111561029857600080fd5b8201836020820111156102aa57600080fd5b803590602001918460208302840111600160201b831117156102cb57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561031a57600080fd5b82018360208201111561032c57600080fd5b803590602001918460208302840111600160201b8311171561034d57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561039c57600080fd5b8201836020820111156103ae57600080fd5b803590602001918460208302840111600160201b831117156103cf57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610786945050505050565b6104156108eb565b604080516001600160a01b039092168252519081900360200190f35b61025e6004803603606081101561044757600080fd5b506001600160a01b038135811691602081013590911690604001356108fa565b61048d6004803603602081101561047d57600080fd5b50356001600160a01b0316610aea565b60408051918252519081900360200190f35b610415610b05565b61025e600480360360608110156104bd57600080fd5b506001600160a01b03813581169160208101359091169060400135610b14565b61025e600480360360208110156104f357600080fd5b50356001600160a01b0316610cba565b61025e6004803603602081101561051957600080fd5b50356001600160a01b0316610d80565b610415610e8a565b61025e6004803603606081101561054757600080fd5b506001600160a01b03813581169160208101359091169060400135610e99565b600160009054906101000a90046001600160a01b03166001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105b557600080fd5b505afa1580156105c9573d6000803e3d6000fd5b505050506040513d60208110156105df57600080fd5b50516001600160a01b031633146106275760405162461bcd60e51b81526004018080602001828103825260248152602001806114c76024913960400191505060405180910390fd5b81518351148015610639575080518251145b6106745760405162461bcd60e51b815260040180806020018281038252603b815260200180611540603b913960400191505060405180910390fd5b60005b83518110156106cc576106c484828151811061068f57fe5b60200260200101518483815181106106a357fe5b60200260200101518484815181106106b757fe5b6020026020010151610b14565b600101610677565b50505050565b6106da611047565b6000546001600160a01b0390811691161461073c576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600160009054906101000a90046001600160a01b03166001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156107d457600080fd5b505afa1580156107e8573d6000803e3d6000fd5b505050506040513d60208110156107fe57600080fd5b50516001600160a01b031633146108465760405162461bcd60e51b81526004018080602001828103825260248152602001806114c76024913960400191505060405180910390fd5b81518351148015610858575080518251145b6108935760405162461bcd60e51b815260040180806020018281038252603b8152602001806115c9603b913960400191505060405180910390fd5b60005b83518110156106cc576108e38482815181106108ae57fe5b60200260200101518483815181106108c257fe5b60200260200101518484815181106108d657fe5b6020026020010151610e99565b600101610896565b6000546001600160a01b031690565b6002546001600160a01b03163314610959576040805162461bcd60e51b815260206004820181905260248201527f4d617267696e506f6f6c3a2053656e646572206973206e6f74206661726d6572604482015290519081900360640190fd5b6001600160a01b03821661099e5760405162461bcd60e51b815260040180806020018281038252602481526020018061157b6024913960400191505060405180910390fd5b604080516370a0823160e01b815230600482015290516000916001600160a01b038616916370a0823191602480820192602092909190829003018186803b1580156109e857600080fd5b505afa1580156109fc573d6000803e3d6000fd5b505050506040513d6020811015610a1257600080fd5b50516001600160a01b038516600090815260036020526040902054909150610a40828263ffffffff61104b16565b831115610a7e5760405162461bcd60e51b81526004018080602001828103825260288152602001806115186028913960400191505060405180910390fd5b610a986001600160a01b038616858563ffffffff61109416565b836001600160a01b0316856001600160a01b03167f2bfce9f5efc2d7cd579270748ddf9d23bc6c0af5193a2759314c2300af9956b1856040518082815260200191505060405180910390a35050505050565b6001600160a01b031660009081526003602052604090205490565b6002546001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610b6257600080fd5b505afa158015610b76573d6000803e3d6000fd5b505050506040513d6020811015610b8c57600080fd5b50516001600160a01b03163314610bd45760405162461bcd60e51b81526004018080602001828103825260248152602001806114c76024913960400191505060405180910390fd5b60008111610c135760405162461bcd60e51b815260040180806020018281038252602f815260200180611472602f913960400191505060405180910390fd5b6001600160a01b038316600090815260036020526040902054610c3c908263ffffffff6110eb16565b6001600160a01b038416600081815260036020526040902091909155610c6a9083308463ffffffff61114516565b816001600160a01b0316836001600160a01b03167f9b4f8cdd00ca1dad21e1b00707351fe747dd74738cf95f60f66518c52c35e645836040518082815260200191505060405180910390a3505050565b610cc2611047565b6000546001600160a01b03908116911614610d24576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6002546040516001600160a01b038084169216907fec2062989428d4fc69d3ba2664807361f4647daf215450588331bbe51efb6a6890600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b610d88611047565b6000546001600160a01b03908116911614610dea576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610e2f5760405162461bcd60e51b81526004018080602001828103825260268152602001806114a16026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031681565b600160009054906101000a90046001600160a01b03166001600160a01b0316633018205f6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ee757600080fd5b505afa158015610efb573d6000803e3d6000fd5b505050506040513d6020811015610f1157600080fd5b50516001600160a01b03163314610f595760405162461bcd60e51b81526004018080602001828103825260248152602001806114c76024913960400191505060405180910390fd5b6001600160a01b038216301415610fa15760405162461bcd60e51b815260040180806020018281038252602d8152602001806114eb602d913960400191505060405180910390fd5b6001600160a01b038316600090815260036020526040902054610fca908263ffffffff61104b16565b6001600160a01b038416600081815260036020526040902091909155610ff790838363ffffffff61109416565b816001600160a01b0316836001600160a01b03167f2d6ff46a316ec627f7677daafa6ad7d6f36bcf938c5f47bf6e671b09d27b415f836040518082815260200191505060405180910390a3505050565b3390565b600061108d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061119f565b9392505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526110e6908490611236565b505050565b60008282018381101561108d576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526106cc908590611236565b6000818484111561122e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156111f35781810151838201526020016111db565b50505050905090810190601f1680156112205780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b606061128b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112e79092919063ffffffff16565b8051909150156110e6578080602001905160208110156112aa57600080fd5b50516110e65760405162461bcd60e51b815260040180806020018281038252602a81526020018061159f602a913960400191505060405180910390fd5b60606112f684846000856112fe565b949350505050565b60606113098561146b565b61135a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106113995780518252601f19909201916020918201910161137a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146113fb576040519150601f19603f3d011682016040523d82523d6000602084013e611400565b606091505b509150915081156114145791506112f69050565b8051156114245780518082602001fd5b60405162461bcd60e51b81526020600482018181528651602484015286518793919283926044019190850190808383600083156111f35781810151838201526020016111db565b3b15159056fe4d617267696e506f6f6c3a207472616e73666572546f506f6f6c20616d6f756e7420697320657175616c20746f20304f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d617267696e506f6f6c3a2053656e646572206973206e6f7420436f6e74726f6c6c65724d617267696e506f6f6c3a2063616e6e6f74207472616e736665722061737365747320746f206f6e6573656c664d617267696e506f6f6c3a20616d6f756e7420746f206661726d2065786365656473206c696d69744d617267696e506f6f6c3a2062617463685472616e73666572546f506f6f6c206172726179206c656e6774687320617265206e6f7420657175616c4d617267696e506f6f6c3a20696e76616c696420726563656976657220616464726573735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565644d617267696e506f6f6c3a2062617463685472616e73666572546f55736572206172726179206c656e6774687320617265206e6f7420657175616ca2646970667358221220f4dcf2eb183c6f07a075a0087f556adfa411825f6af606037fea8f0b8ee0db0a64736f6c634300060a0033",
  "devdoc": {
    "author": "Opyn Team",
    "methods": {
      "batchTransferToPool(address[],address[],uint256[])": {
        "params": {
          "_amount": "amount of each token to transfer to pool",
          "_asset": "addresses of the assets to transfer",
          "_user": "addresses of the users to transfer assets to"
        }
      },
      "batchTransferToUser(address[],address[],uint256[])": {
        "params": {
          "_amount": "amount of each token to transfer to _user",
          "_asset": "addresses of the assets to transfer",
          "_user": "addresses of the users to transfer assets to"
        }
      },
      "constructor": {
        "params": {
          "_addressBook": "AddressBook module"
        }
      },
      "farm(address,address,uint256)": {
        "details": "can only be called by the farmer address. Do not farm otokens.",
        "params": {
          "_amount": "amount to remove from pool",
          "_asset": "asset address",
          "_receiver": "receiver address"
        }
      },
      "getStoredBalance(address)": {
        "params": {
          "_asset": "asset address"
        },
        "returns": {
          "_0": "asset balance"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFarmer(address)": {
        "details": "can only be called by MarginPool owner",
        "params": {
          "_farmer": "farmer address"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferToPool(address,address,uint256)": {
        "params": {
          "_amount": "amount of the token to transfer from _user",
          "_asset": "address of the asset to transfer",
          "_user": "address of the user to transfer assets from"
        }
      },
      "transferToUser(address,address,uint256)": {
        "params": {
          "_amount": "amount of the token to transfer to _user",
          "_asset": "address of the asset to transfer",
          "_user": "address of the user to transfer assets to"
        }
      }
    },
    "stateVariables": {
      "assetBalance": {
        "details": "mapping between an asset and the amount of the asset in the pool"
      },
      "farmer": {
        "details": "the address that has the ability to withdraw excess assets in the pool"
      }
    },
    "title": "MarginPool"
  },
  "userdoc": {
    "methods": {
      "addressBook()": {
        "notice": "AddressBook module"
      },
      "batchTransferToPool(address[],address[],uint256[])": {
        "notice": "transfers multiple assets from users to the pool"
      },
      "batchTransferToUser(address[],address[],uint256[])": {
        "notice": "transfers multiple assets from the pool to users"
      },
      "constructor": "contructor",
      "farm(address,address,uint256)": {
        "notice": "function to collect the excess balance of a particular asset"
      },
      "getStoredBalance(address)": {
        "notice": "get the stored balance of an asset"
      },
      "setFarmer(address)": {
        "notice": "function to set farmer address"
      },
      "transferToPool(address,address,uint256)": {
        "notice": "transfers an asset from a user to the pool"
      },
      "transferToUser(address,address,uint256)": {
        "notice": "transfers an asset from the pool to a user"
      }
    },
    "notice": "Contract that holds all protocol funds"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13735,
        "contract": "contracts/core/MarginPool.sol:MarginPool",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5939,
        "contract": "contracts/core/MarginPool.sol:MarginPool",
        "label": "addressBook",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5942,
        "contract": "contracts/core/MarginPool.sol:MarginPool",
        "label": "farmer",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 5947,
        "contract": "contracts/core/MarginPool.sol:MarginPool",
        "label": "assetBalance",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}