{
  "address": "0x9f13dd8149F3CdA298F9dF404A467c3F24Fa02C7",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressBook",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "underlying",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "strike",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "collateral",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "strikePrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isPut",
          "type": "bool"
        }
      ],
      "name": "OtokenCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addressBook",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_underlyingAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strikeAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isPut",
          "type": "bool"
        }
      ],
      "name": "createOtoken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_underlyingAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strikeAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isPut",
          "type": "bool"
        }
      ],
      "name": "getOtoken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOtokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_underlyingAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strikeAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_collateralAsset",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_strikePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_isPut",
          "type": "bool"
        }
      ],
      "name": "getTargetOtokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "otokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xa663cdd4ccbaab561a88447f3048ae4d66527d4da9cb2ed580b635add6f00856",
  "receipt": {
    "to": null,
    "from": "0x3F57a38577F92adC561D8f4504832dCc34000f11",
    "contractAddress": "0x9f13dd8149F3CdA298F9dF404A467c3F24Fa02C7",
    "transactionIndex": 0,
    "gasUsed": "1072477",
    "logsBloom": "0x
    "blockHash": "0x5e235c48f2563bbc2dad6d43a0c8ed1b08df103b4a80af4f8e66026e221b18e2",
    "transactionHash": "0xa663cdd4ccbaab561a88447f3048ae4d66527d4da9cb2ed580b635add6f00856",
    "logs": [],
    "blockNumber": 29998382,
    "cumulativeGasUsed": "1072477",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5F7a9222fc10348D0A0AA3aBDC7A74cC90b7a385"
  ],
  "numDeployments": 1,
  "solcInputHash": "e64f7796e753573a0d4471a5ea61f62d",
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressBook\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"underlying\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strike\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"strikePrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isPut\",\"type\":\"bool\"}],\"name\":\"OtokenCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressBook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strikeAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPut\",\"type\":\"bool\"}],\"name\":\"createOtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strikeAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPut\",\"type\":\"bool\"}],\"name\":\"getOtoken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOtokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_underlyingAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strikeAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_collateralAsset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_strikePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isPut\",\"type\":\"bool\"}],\"name\":\"getTargetOtokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"otokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Opyn Team\",\"details\":\"Calculate contract address before each creation with CREATE2 and deploy eip-1167 minimal proxies for oToken logic contract\",\"methods\":{\"createOtoken(address,address,address,uint256,uint256,bool)\":{\"details\":\"deploy an eip-1167 minimal proxy with CREATE2 and register it to the whitelist module\",\"params\":{\"_collateralAsset\":\"asset that is held as collateral against short/written options\",\"_expiry\":\"expiration timestamp as a unix timestamp\",\"_isPut\":\"True if a put option, False if a call option\",\"_strikeAsset\":\"asset that the strike price is denominated in\",\"_strikePrice\":\"strike price with decimals = 18\",\"_underlyingAsset\":\"asset that the option references\"},\"returns\":{\"_0\":\"newOtoken address of the newly created option\"}},\"getOtoken(address,address,address,uint256,uint256,bool)\":{\"params\":{\"_collateralAsset\":\"asset that is held as collateral against short/written options\",\"_expiry\":\"expiration timestamp as a unix timestamp\",\"_isPut\":\"True if a put option, False if a call option\",\"_strikeAsset\":\"asset that the strike price is denominated in\",\"_strikePrice\":\"strike price with decimals = 18\",\"_underlyingAsset\":\"asset that the option references\"},\"returns\":{\"_0\":\"the address of target otoken.\"}},\"getOtokensLength()\":{\"returns\":{\"_0\":\"length of the oTokens array\"}},\"getTargetOtokenAddress(address,address,address,uint256,uint256,bool)\":{\"details\":\"return the exact address that will be deployed at with _computeAddress\",\"params\":{\"_collateralAsset\":\"asset that is held as collateral against short/written options\",\"_expiry\":\"expiration timestamp as a unix timestamp\",\"_isPut\":\"True if a put option, False if a call option\",\"_strikeAsset\":\"asset that the strike price is denominated in\",\"_strikePrice\":\"strike price with decimals = 18\",\"_underlyingAsset\":\"asset that the option references\"},\"returns\":{\"_0\":\"targetAddress the address this oToken would be deployed at\"}}},\"stateVariables\":{\"MAX_EXPIRY\":{\"details\":\"max expiry that BokkyPooBahsDateTimeLibrary can handle. (2345/12/31)\"},\"idToAddress\":{\"details\":\"mapping from parameters hash to its deployed address\"}},\"title\":\"A factory to create Opyn oTokens\"},\"userdoc\":{\"methods\":{\"addressBook()\":{\"notice\":\"Opyn AddressBook contract that records the address of the Whitelist module and the Otoken impl address. */\"},\"createOtoken(address,address,address,uint256,uint256,bool)\":{\"notice\":\"create new oTokens\"},\"getOtoken(address,address,address,uint256,uint256,bool)\":{\"notice\":\"get the oToken address for an already created oToken, if no oToken has been created with these parameters, it will return address(0)\"},\"getOtokensLength()\":{\"notice\":\"get the total oTokens created by the factory\"},\"getTargetOtokenAddress(address,address,address,uint256,uint256,bool)\":{\"notice\":\"get the address at which a new oToken with these parameters would be deployed\"},\"otokens(uint256)\":{\"notice\":\"array of all created otokens */\"}},\"notice\":\"SPDX-License-Identifier: UNLICENSEDCreate new oTokens and keep track of all created tokens\"}},\"settings\":{\"compilationTarget\":{\"contracts/core/OtokenFactory.sol\":\"OtokenFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/core/OtokenFactory.sol\":{\"content\":\"pragma solidity =0.6.10;\\n\\nimport {OtokenSpawner} from \\\"./OtokenSpawner.sol\\\";\\nimport {SafeMath} from \\\"../packages/oz/SafeMath.sol\\\";\\nimport {AddressBookInterface} from \\\"../interfaces/AddressBookInterface.sol\\\";\\nimport {OtokenInterface} from \\\"../interfaces/OtokenInterface.sol\\\";\\nimport {WhitelistInterface} from \\\"../interfaces/WhitelistInterface.sol\\\";\\n\\n/**\\n * SPDX-License-Identifier: UNLICENSED\\n * @title A factory to create Opyn oTokens\\n * @author Opyn Team\\n * @notice Create new oTokens and keep track of all created tokens\\n * @dev Calculate contract address before each creation with CREATE2\\n * and deploy eip-1167 minimal proxies for oToken logic contract\\n */\\ncontract OtokenFactory is OtokenSpawner {\\n    using SafeMath for uint256;\\n    /// @notice Opyn AddressBook contract that records the address of the Whitelist module and the Otoken impl address. */\\n    address public addressBook;\\n\\n    /// @notice array of all created otokens */\\n    address[] public otokens;\\n\\n    /// @dev mapping from parameters hash to its deployed address\\n    mapping(bytes32 => address) private idToAddress;\\n\\n    /// @dev max expiry that BokkyPooBahsDateTimeLibrary can handle. (2345/12/31)\\n    uint256 private constant MAX_EXPIRY = 11865398400;\\n\\n    constructor(address _addressBook) public {\\n        addressBook = _addressBook;\\n    }\\n\\n    /// @notice emitted when the factory creates a new Option\\n    event OtokenCreated(\\n        address tokenAddress,\\n        address creator,\\n        address indexed underlying,\\n        address indexed strike,\\n        address indexed collateral,\\n        uint256 strikePrice,\\n        uint256 expiry,\\n        bool isPut\\n    );\\n\\n    /**\\n     * @notice create new oTokens\\n     * @dev deploy an eip-1167 minimal proxy with CREATE2 and register it to the whitelist module\\n     * @param _underlyingAsset asset that the option references\\n     * @param _strikeAsset asset that the strike price is denominated in\\n     * @param _collateralAsset asset that is held as collateral against short/written options\\n     * @param _strikePrice strike price with decimals = 18\\n     * @param _expiry expiration timestamp as a unix timestamp\\n     * @param _isPut True if a put option, False if a call option\\n     * @return newOtoken address of the newly created option\\n     */\\n    function createOtoken(\\n        address _underlyingAsset,\\n        address _strikeAsset,\\n        address _collateralAsset,\\n        uint256 _strikePrice,\\n        uint256 _expiry,\\n        bool _isPut\\n    ) external returns (address) {\\n        require(_expiry > now, \\\"OtokenFactory: Can't create expired option\\\");\\n        require(_expiry < MAX_EXPIRY, \\\"OtokenFactory: Can't create option with expiry > 2345/12/31\\\");\\n        // 8 hours = 3600 * 8 = 28800 seconds\\n        require(_expiry.sub(28800).mod(86400) == 0, \\\"OtokenFactory: Option has to expire 08:00 UTC\\\");\\n        bytes32 id = _getOptionId(_underlyingAsset, _strikeAsset, _collateralAsset, _strikePrice, _expiry, _isPut);\\n        require(idToAddress[id] == address(0), \\\"OtokenFactory: Option already created\\\");\\n\\n        address whitelist = AddressBookInterface(addressBook).getWhitelist();\\n        require(\\n            WhitelistInterface(whitelist).isWhitelistedProduct(\\n                _underlyingAsset,\\n                _strikeAsset,\\n                _collateralAsset,\\n                _isPut\\n            ),\\n            \\\"OtokenFactory: Unsupported Product\\\"\\n        );\\n\\n        require(!_isPut || _strikePrice > 0, \\\"OtokenFactory: Can't create a $0 strike put option\\\");\\n\\n        address otokenImpl = AddressBookInterface(addressBook).getOtokenImpl();\\n\\n        bytes memory initializationCalldata = abi.encodeWithSelector(\\n            OtokenInterface(otokenImpl).init.selector,\\n            addressBook,\\n            _underlyingAsset,\\n            _strikeAsset,\\n            _collateralAsset,\\n            _strikePrice,\\n            _expiry,\\n            _isPut\\n        );\\n\\n        address newOtoken = _spawn(otokenImpl, initializationCalldata);\\n\\n        idToAddress[id] = newOtoken;\\n        otokens.push(newOtoken);\\n        WhitelistInterface(whitelist).whitelistOtoken(newOtoken);\\n\\n        emit OtokenCreated(\\n            newOtoken,\\n            msg.sender,\\n            _underlyingAsset,\\n            _strikeAsset,\\n            _collateralAsset,\\n            _strikePrice,\\n            _expiry,\\n            _isPut\\n        );\\n\\n        return newOtoken;\\n    }\\n\\n    /**\\n     * @notice get the total oTokens created by the factory\\n     * @return length of the oTokens array\\n     */\\n    function getOtokensLength() external view returns (uint256) {\\n        return otokens.length;\\n    }\\n\\n    /**\\n     * @notice get the oToken address for an already created oToken, if no oToken has been created with these parameters, it will return address(0)\\n     * @param _underlyingAsset asset that the option references\\n     * @param _strikeAsset asset that the strike price is denominated in\\n     * @param _collateralAsset asset that is held as collateral against short/written options\\n     * @param _strikePrice strike price with decimals = 18\\n     * @param _expiry expiration timestamp as a unix timestamp\\n     * @param _isPut True if a put option, False if a call option\\n     * @return the address of target otoken.\\n     */\\n    function getOtoken(\\n        address _underlyingAsset,\\n        address _strikeAsset,\\n        address _collateralAsset,\\n        uint256 _strikePrice,\\n        uint256 _expiry,\\n        bool _isPut\\n    ) external view returns (address) {\\n        bytes32 id = _getOptionId(_underlyingAsset, _strikeAsset, _collateralAsset, _strikePrice, _expiry, _isPut);\\n        return idToAddress[id];\\n    }\\n\\n    /**\\n     * @notice get the address at which a new oToken with these parameters would be deployed\\n     * @dev return the exact address that will be deployed at with _computeAddress\\n     * @param _underlyingAsset asset that the option references\\n     * @param _strikeAsset asset that the strike price is denominated in\\n     * @param _collateralAsset asset that is held as collateral against short/written options\\n     * @param _strikePrice strike price with decimals = 18\\n     * @param _expiry expiration timestamp as a unix timestamp\\n     * @param _isPut True if a put option, False if a call option\\n     * @return targetAddress the address this oToken would be deployed at\\n     */\\n    function getTargetOtokenAddress(\\n        address _underlyingAsset,\\n        address _strikeAsset,\\n        address _collateralAsset,\\n        uint256 _strikePrice,\\n        uint256 _expiry,\\n        bool _isPut\\n    ) external view returns (address) {\\n        address otokenImpl = AddressBookInterface(addressBook).getOtokenImpl();\\n\\n        bytes memory initializationCalldata = abi.encodeWithSelector(\\n            OtokenInterface(otokenImpl).init.selector,\\n            addressBook,\\n            _underlyingAsset,\\n            _strikeAsset,\\n            _collateralAsset,\\n            _strikePrice,\\n            _expiry,\\n            _isPut\\n        );\\n        return _computeAddress(otokenImpl, initializationCalldata);\\n    }\\n\\n    /**\\n     * @dev hash oToken parameters and return a unique option id\\n     * @param _underlyingAsset asset that the option references\\n     * @param _strikeAsset asset that the strike price is denominated in\\n     * @param _collateralAsset asset that is held as collateral against short/written options\\n     * @param _strikePrice strike price with decimals = 18\\n     * @param _expiry expiration timestamp as a unix timestamp\\n     * @param _isPut True if a put option, False if a call option\\n     * @return id the unique id of an oToken\\n     */\\n    function _getOptionId(\\n        address _underlyingAsset,\\n        address _strikeAsset,\\n        address _collateralAsset,\\n        uint256 _strikePrice,\\n        uint256 _expiry,\\n        bool _isPut\\n    ) internal pure returns (bytes32) {\\n        return\\n            keccak256(\\n                abi.encodePacked(_underlyingAsset, _strikeAsset, _collateralAsset, _strikePrice, _expiry, _isPut)\\n            );\\n    }\\n}\\n\",\"keccak256\":\"0xb4c8fb20cf674fd258eb5799e3f6570ecf9e7792d2e259daa9bcd485b5fdc010\",\"license\":\"UNLICENSED\"},\"contracts/core/OtokenSpawner.sol\":{\"content\":\"/* SPDX-License-Identifier: UNLICENSED */\\n\\npragma solidity =0.6.10;\\n\\nimport {Spawn} from \\\"../packages/Spawn.sol\\\";\\nimport {Create2} from \\\"../packages/oz/Create2.sol\\\";\\n\\n/**\\n * @title OtokenSpawner\\n * @author Opyn Team\\n * @notice This contract spawns and initializes eip-1167 minimal proxies that\\n * point to existing logic contracts.\\n * @notice This contract was modified from Spawner.sol\\n * https://github.com/0age/Spawner/blob/master/contracts/Spawner.sol to fit into OtokenFactory\\n */\\ncontract OtokenSpawner {\\n    // fixed salt value because we will only deploy an oToken with the same init value once\\n    bytes32 private constant SALT = bytes32(0);\\n\\n    /**\\n     * @notice internal function for spawning an eip-1167 minimal proxy using `CREATE2`\\n     * @param logicContract address of the logic contract\\n     * @param initializationCalldata calldata that will be supplied to the `DELEGATECALL`\\n     * from the spawned contract to the logic contract during contract creation\\n     * @return spawnedContract the address of the newly-spawned contract\\n     */\\n    function _spawn(address logicContract, bytes memory initializationCalldata) internal returns (address) {\\n        // place the creation code and constructor args of the contract to spawn in memory\\n        bytes memory initCode = abi.encodePacked(\\n            type(Spawn).creationCode,\\n            abi.encode(logicContract, initializationCalldata)\\n        );\\n\\n        // spawn the contract using `CREATE2`\\n        return Create2.deploy(0, SALT, initCode);\\n    }\\n\\n    /**\\n     * @notice internal view function for finding the address of the standard\\n     * eip-1167 minimal proxy created using `CREATE2` with a given logic contract\\n     * and initialization calldata payload\\n     * @param logicContract address of the logic contract\\n     * @param initializationCalldata calldata that will be supplied to the `DELEGATECALL`\\n     * from the spawned contract to the logic contract during contract creation\\n     * @return target address of the next spawned minimal proxy contract with the\\n     * given parameters.\\n     */\\n    function _computeAddress(address logicContract, bytes memory initializationCalldata)\\n        internal\\n        view\\n        returns (address target)\\n    {\\n        // place the creation code and constructor args of the contract to spawn in memory\\n        bytes memory initCode = abi.encodePacked(\\n            type(Spawn).creationCode,\\n            abi.encode(logicContract, initializationCalldata)\\n        );\\n        // get target address using the constructed initialization code\\n        bytes32 initCodeHash = keccak256(initCode);\\n\\n        target = Create2.computeAddress(SALT, initCodeHash);\\n    }\\n}\\n\",\"keccak256\":\"0xe02b8342e89161e381dff7ed1c417c49b00eafea79842c19d6901df0a1ff4167\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/AddressBookInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.6.10;\\n\\ninterface AddressBookInterface {\\n    /* Getters */\\n\\n    function getOtokenImpl() external view returns (address);\\n\\n    function getOtokenFactory() external view returns (address);\\n\\n    function getWhitelist() external view returns (address);\\n\\n    function getController() external view returns (address);\\n\\n    function getOracle() external view returns (address);\\n\\n    function getMarginPool() external view returns (address);\\n\\n    function getMarginCalculator() external view returns (address);\\n\\n    function getLiquidationManager() external view returns (address);\\n\\n    function getAddress(bytes32 _id) external view returns (address);\\n\\n    /* Setters */\\n\\n    function setOtokenImpl(address _otokenImpl) external;\\n\\n    function setOtokenFactory(address _factory) external;\\n\\n    function setOracleImpl(address _otokenImpl) external;\\n\\n    function setWhitelist(address _whitelist) external;\\n\\n    function setController(address _controller) external;\\n\\n    function setMarginPool(address _marginPool) external;\\n\\n    function setMarginCalculator(address _calculator) external;\\n\\n    function setLiquidationManager(address _liquidationManager) external;\\n\\n    function setAddress(bytes32 _id, address _newImpl) external;\\n}\\n\",\"keccak256\":\"0xf083b72d2476fc63b101130a044a7593a6bead41ba8c23482cafd7b7e2547687\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/OtokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.6.10;\\n\\ninterface OtokenInterface {\\n    function addressBook() external view returns (address);\\n\\n    function underlyingAsset() external view returns (address);\\n\\n    function strikeAsset() external view returns (address);\\n\\n    function collateralAsset() external view returns (address);\\n\\n    function strikePrice() external view returns (uint256);\\n\\n    function expiryTimestamp() external view returns (uint256);\\n\\n    function isPut() external view returns (bool);\\n\\n    function init(\\n        address _addressBook,\\n        address _underlyingAsset,\\n        address _strikeAsset,\\n        address _collateralAsset,\\n        uint256 _strikePrice,\\n        uint256 _expiry,\\n        bool _isPut\\n    ) external;\\n\\n    function getOtokenDetails()\\n        external\\n        view\\n        returns (\\n            address,\\n            address,\\n            address,\\n            uint256,\\n            uint256,\\n            bool\\n        );\\n\\n    function mintOtoken(address account, uint256 amount) external;\\n\\n    function burnOtoken(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x3089cdd00dca9459a3c8458d6dc0d8dfb95e716aebdd6d9929238d0be625757a\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/WhitelistInterface.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.6.10;\\n\\ninterface WhitelistInterface {\\n    /* View functions */\\n\\n    function addressBook() external view returns (address);\\n\\n    function isWhitelistedProduct(\\n        address _underlying,\\n        address _strike,\\n        address _collateral,\\n        bool _isPut\\n    ) external view returns (bool);\\n\\n    function isWhitelistedCollateral(address _collateral) external view returns (bool);\\n\\n    function isWhitelistedOtoken(address _otoken) external view returns (bool);\\n\\n    function isWhitelistedCallee(address _callee) external view returns (bool);\\n\\n    /* Admin / factory only functions */\\n    function whitelistProduct(\\n        address _underlying,\\n        address _strike,\\n        address _collateral,\\n        bool _isPut\\n    ) external;\\n\\n    function blacklistProduct(\\n        address _underlying,\\n        address _strike,\\n        address _collateral,\\n        bool _isPut\\n    ) external;\\n\\n    function whitelistCollateral(address _collateral) external;\\n\\n    function blacklistCollateral(address _collateral) external;\\n\\n    function whitelistOtoken(address _otoken) external;\\n\\n    function blacklistOtoken(address _otoken) external;\\n\\n    function whitelistCallee(address _callee) external;\\n\\n    function blacklistCallee(address _callee) external;\\n}\\n\",\"keccak256\":\"0xf4f8c9a4a9face43a6c1f36d385bdbbcb57d723530cb4f7c8e402b79fdf41479\",\"license\":\"UNLICENSED\"},\"contracts/packages/Spawn.sol\":{\"content\":\"/* solhint-disable avoid-low-level-calls, indent, no-inline-assembly */\\n/* This contract is copied from Spawner package: https://github.com/0age/Spawner */\\npragma solidity =0.6.10;\\n\\n/**\\n * @title Spawn\\n * @author 0age\\n * @notice This contract provides creation code that is used by Spawner in order\\n * to initialize and deploy eip-1167 minimal proxies for a given logic contract.\\n * SPDX-License-Identifier: MIT\\n */\\n// version: https://github.com/0age/Spawner/blob/1b342afda0c1ec47e6a2d65828a6ca50f0a442fe/contracts/Spawner.sol\\ncontract Spawn {\\n    constructor(address logicContract, bytes memory initializationCalldata) public payable {\\n        // delegatecall into the logic contract to perform initialization.\\n        (bool ok, ) = logicContract.delegatecall(initializationCalldata);\\n        if (!ok) {\\n            // pass along failure message from delegatecall and revert.\\n            assembly {\\n                returndatacopy(0, 0, returndatasize())\\n                revert(0, returndatasize())\\n            }\\n        }\\n\\n        // place eip-1167 runtime code in memory.\\n        bytes memory runtimeCode = abi.encodePacked(\\n            bytes10(0x363d3d373d3d3d363d73),\\n            logicContract,\\n            bytes15(0x5af43d82803e903d91602b57fd5bf3)\\n        );\\n\\n        // return eip-1167 code to write it to spawned contract runtime.\\n        assembly {\\n            return(add(0x20, runtimeCode), 45) // eip-1167 runtime code, length\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xb7be1b391d5766babb41a9e63badbb0a707cc0340f7de4edf4e643e7f43ac47d\",\"license\":\"MIT\"},\"contracts/packages/oz/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// openzeppelin-contracts v3.1.0\\n/* solhint-disable */\\n\\npragma solidity =0.6.10;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(\\n        uint256 amount,\\n        bytes32 salt,\\n        bytes memory bytecode\\n    ) internal returns (address) {\\n        address addr;\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n        return addr;\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(\\n        bytes32 salt,\\n        bytes32 bytecodeHash,\\n        address deployer\\n    ) internal pure returns (address) {\\n        bytes32 _data = keccak256(abi.encodePacked(bytes1(0xff), deployer, salt, bytecodeHash));\\n        return address(uint256(_data));\\n    }\\n}\\n\",\"keccak256\":\"0x4b1cd6d6448f378562b37b447c6489a4fd962937fa2f98fee7279a69f7139721\",\"license\":\"MIT\"},\"contracts/packages/oz/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// openzeppelin-contracts v3.1.0\\n\\n/* solhint-disable */\\npragma solidity ^0.6.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xe257e662689b978c321f9618441d4e0233276acea88093d3d344873592636c18\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516112683803806112688339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055611203806100656000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063115470541461006757806346e63dc4146100cd578063b86b9a64146100e7578063c097463014610131578063de0120de1461017b578063f5887cdd14610198575b600080fd5b6100b1600480360360c081101561007d57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a0013515156101a0565b604080516001600160a01b039092168252519081900360200190f35b6100d56101d5565b60408051918252519081900360200190f35b6100b1600480360360c08110156100fd57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a0013515156101db565b6100b1600480360360c081101561014757600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a0013515156102db565b6100b16004803603602081101561019157600080fd5b503561081d565b6100b1610844565b6000806101b1888888888888610853565b6000908152600260205260409020546001600160a01b031698975050505050505050565b60015490565b600080546040805163a8de41d560e01b8152905183926001600160a01b03169163a8de41d5916004808301926020929190829003018186803b15801561022057600080fd5b505afa158015610234573d6000803e3d6000fd5b505050506040513d602081101561024a57600080fd5b5051600054604080516001600160a01b0392831660248201528b831660448201528a83166064820152918916608483015260a4820188905260c4820187905285151560e4808401919091528151808403909101815261010490920190526020810180516001600160e01b0316633d8c37cd60e21b1790529091506102ce82826108bb565b9998505050505050505050565b600042831161031b5760405162461bcd60e51b815260040180806020018281038252602a8152602001806110e8602a913960400191505060405180910390fd5b6402c33b9c80831061035e5760405162461bcd60e51b815260040180806020018281038252603b815260200180611166603b913960400191505060405180910390fd5b610383620151806103778561708063ffffffff610a4716565b9063ffffffff610a9016565b156103bf5760405162461bcd60e51b815260040180806020018281038252602d8152602001806111a1602d913960400191505060405180910390fd5b60006103cf888888888888610853565b6000818152600260205260409020549091506001600160a01b0316156104265760405162461bcd60e51b81526004018080602001828103825260258152602001806110c36025913960400191505060405180910390fd5b60008060009054906101000a90046001600160a01b03166001600160a01b031663d01f63f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561047557600080fd5b505afa158015610489573d6000803e3d6000fd5b505050506040513d602081101561049f57600080fd5b50516040805163401a83cf60e01b81526001600160a01b038c811660048301528b811660248301528a81166044830152871515606483015291519293509083169163401a83cf91608480820192602092909190829003018186803b15801561050657600080fd5b505afa15801561051a573d6000803e3d6000fd5b505050506040513d602081101561053057600080fd5b505161056d5760405162461bcd60e51b81526004018080602001828103825260228152602001806111126022913960400191505060405180910390fd5b83158061057a5750600086115b6105b55760405162461bcd60e51b81526004018080602001828103825260328152602001806111346032913960400191505060405180910390fd5b60008060009054906101000a90046001600160a01b03166001600160a01b031663a8de41d56040518163ffffffff1660e01b815260040160206040518083038186803b15801561060457600080fd5b505afa158015610618573d6000803e3d6000fd5b505050506040513d602081101561062e57600080fd5b505160008054604080516001600160a01b0392831660248201528e831660448201528d83166064820152918c16608483015260a482018b905260c482018a905288151560e4808401919091528151808403909101815261010490920190526020810180516001600160e01b0316633d8c37cd60e21b1790529192506106b38383610ad2565b60008681526002602052604080822080546001600160a01b038086166001600160a01b031992831681179093556001805480820182559086527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180549092168317909155825163763893db60e11b8152600481019290925291519394509087169263ec7127b69260248084019391929182900301818387803b15801561075957600080fd5b505af115801561076d573d6000803e3d6000fd5b50505050896001600160a01b03168b6001600160a01b03168d6001600160a01b03167fedf283b0b3396dd34e23a917cb887ad557f18a593be3a2e9c069fd59f19a811a84338e8e8e60405180866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001821515151581526020019550505050505060405180910390a49b9a5050505050505050505050565b6001818154811061082a57fe5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031681565b604080516bffffffffffffffffffffffff19606098891b811660208084019190915297891b811660348301529590971b9094166048870152605c860192909252607c850152151560f81b609c8401528051607d818503018152609d9093019052815191012090565b60006060604051806020016108cf90610ec5565b601f1982820381018352601f9091011660408181526001600160a01b038716602083810191825282840192835287516060850152875189948994926080909101919085019080838360005b8381101561093257818101518382015260200161091a565b50505050905090810190601f16801561095f5780820380516001836020036101000a031916815260200191505b5093505050506040516020818303038152906040526040516020018083805190602001908083835b602083106109a65780518252601f199092019160209182019101610987565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106109ee5780518252601f1990920191602091820191016109cf565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529050600081805190602001209050610a3e6000801b82610c53565b95945050505050565b6000610a8983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c60565b9392505050565b6000610a8983836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815250610cf7565b6000606060405180602001610ae690610ec5565b601f1982820381018352601f9091011660408181526001600160a01b038716602083810191825282840192835287516060850152875189948994926080909101919085019080838360005b83811015610b49578181015183820152602001610b31565b50505050905090810190601f168015610b765780820380516001836020036101000a031916815260200191505b5093505050506040516020818303038152906040526040516020018083805190602001908083835b60208310610bbd5780518252601f199092019160209182019101610b9e565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610c055780518252601f199092019160209182019101610be6565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529050610c4b60008060001b83610d59565b949350505050565b6000610a89838330610e6a565b60008184841115610cef5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cb4578181015183820152602001610c9c565b50505050905090810190601f168015610ce15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610d465760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cb4578181015183820152602001610c9c565b50828481610d5057fe5b06949350505050565b60008084471015610db1576040805162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b8251610e04576040805162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015290519081900360640190fd5b8383516020850187f590506001600160a01b038116610c4b576040805162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015290519081900360640190fd5b604080516001600160f81b031960208083019190915260609390931b6bffffffffffffffffffffffff191660218201526035810194909452605580850193909352805180850390930183526075909301909252805191012090565b6101f080610ed38339019056fe60806040526040516101f03803806101f08339818101604052604081101561002657600080fd5b81516020830180516040519294929383019291908464010000000082111561004d57600080fd5b90830190602082018581111561006257600080fd5b825164010000000081118282018810171561007c57600080fd5b82525081516020918201929091019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b506040525050506000826001600160a01b0316826040518082805190602001908083835b602083106101195780518252601f1990920191602091820191016100fa565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610179576040519150601f19603f3d011682016040523d82523d6000602084013e61017e565b606091505b5050905080610191573d6000803e3d6000fd5b6040805169363d3d373d3d3d363d7360b01b6020808301919091526001600160601b0319606087901b16602a8301526e5af43d82803e903d91602b57fd5bf360881b603e8301528251602d81840381018252604d9093019093528201f3fe4f746f6b656e466163746f72793a204f7074696f6e20616c726561647920637265617465644f746f6b656e466163746f72793a2043616e2774206372656174652065787069726564206f7074696f6e4f746f6b656e466163746f72793a20556e737570706f727465642050726f647563744f746f6b656e466163746f72793a2043616e277420637265617465206120243020737472696b6520707574206f7074696f6e4f746f6b656e466163746f72793a2043616e277420637265617465206f7074696f6e207769746820657870697279203e20323334352f31322f33314f746f6b656e466163746f72793a204f7074696f6e2068617320746f206578706972652030383a303020555443a2646970667358221220b25a2f187fe35f72bc6849abbb13414552e51ba6628328706de6368ce96468fc64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063115470541461006757806346e63dc4146100cd578063b86b9a64146100e7578063c097463014610131578063de0120de1461017b578063f5887cdd14610198575b600080fd5b6100b1600480360360c081101561007d57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a0013515156101a0565b604080516001600160a01b039092168252519081900360200190f35b6100d56101d5565b60408051918252519081900360200190f35b6100b1600480360360c08110156100fd57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a0013515156101db565b6100b1600480360360c081101561014757600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060808101359060a0013515156102db565b6100b16004803603602081101561019157600080fd5b503561081d565b6100b1610844565b6000806101b1888888888888610853565b6000908152600260205260409020546001600160a01b031698975050505050505050565b60015490565b600080546040805163a8de41d560e01b8152905183926001600160a01b03169163a8de41d5916004808301926020929190829003018186803b15801561022057600080fd5b505afa158015610234573d6000803e3d6000fd5b505050506040513d602081101561024a57600080fd5b5051600054604080516001600160a01b0392831660248201528b831660448201528a83166064820152918916608483015260a4820188905260c4820187905285151560e4808401919091528151808403909101815261010490920190526020810180516001600160e01b0316633d8c37cd60e21b1790529091506102ce82826108bb565b9998505050505050505050565b600042831161031b5760405162461bcd60e51b815260040180806020018281038252602a8152602001806110e8602a913960400191505060405180910390fd5b6402c33b9c80831061035e5760405162461bcd60e51b815260040180806020018281038252603b815260200180611166603b913960400191505060405180910390fd5b610383620151806103778561708063ffffffff610a4716565b9063ffffffff610a9016565b156103bf5760405162461bcd60e51b815260040180806020018281038252602d8152602001806111a1602d913960400191505060405180910390fd5b60006103cf888888888888610853565b6000818152600260205260409020549091506001600160a01b0316156104265760405162461bcd60e51b81526004018080602001828103825260258152602001806110c36025913960400191505060405180910390fd5b60008060009054906101000a90046001600160a01b03166001600160a01b031663d01f63f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561047557600080fd5b505afa158015610489573d6000803e3d6000fd5b505050506040513d602081101561049f57600080fd5b50516040805163401a83cf60e01b81526001600160a01b038c811660048301528b811660248301528a81166044830152871515606483015291519293509083169163401a83cf91608480820192602092909190829003018186803b15801561050657600080fd5b505afa15801561051a573d6000803e3d6000fd5b505050506040513d602081101561053057600080fd5b505161056d5760405162461bcd60e51b81526004018080602001828103825260228152602001806111126022913960400191505060405180910390fd5b83158061057a5750600086115b6105b55760405162461bcd60e51b81526004018080602001828103825260328152602001806111346032913960400191505060405180910390fd5b60008060009054906101000a90046001600160a01b03166001600160a01b031663a8de41d56040518163ffffffff1660e01b815260040160206040518083038186803b15801561060457600080fd5b505afa158015610618573d6000803e3d6000fd5b505050506040513d602081101561062e57600080fd5b505160008054604080516001600160a01b0392831660248201528e831660448201528d83166064820152918c16608483015260a482018b905260c482018a905288151560e4808401919091528151808403909101815261010490920190526020810180516001600160e01b0316633d8c37cd60e21b1790529192506106b38383610ad2565b60008681526002602052604080822080546001600160a01b038086166001600160a01b031992831681179093556001805480820182559086527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180549092168317909155825163763893db60e11b8152600481019290925291519394509087169263ec7127b69260248084019391929182900301818387803b15801561075957600080fd5b505af115801561076d573d6000803e3d6000fd5b50505050896001600160a01b03168b6001600160a01b03168d6001600160a01b03167fedf283b0b3396dd34e23a917cb887ad557f18a593be3a2e9c069fd59f19a811a84338e8e8e60405180866001600160a01b03166001600160a01b03168152602001856001600160a01b03166001600160a01b03168152602001848152602001838152602001821515151581526020019550505050505060405180910390a49b9a5050505050505050505050565b6001818154811061082a57fe5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031681565b604080516bffffffffffffffffffffffff19606098891b811660208084019190915297891b811660348301529590971b9094166048870152605c860192909252607c850152151560f81b609c8401528051607d818503018152609d9093019052815191012090565b60006060604051806020016108cf90610ec5565b601f1982820381018352601f9091011660408181526001600160a01b038716602083810191825282840192835287516060850152875189948994926080909101919085019080838360005b8381101561093257818101518382015260200161091a565b50505050905090810190601f16801561095f5780820380516001836020036101000a031916815260200191505b5093505050506040516020818303038152906040526040516020018083805190602001908083835b602083106109a65780518252601f199092019160209182019101610987565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b602083106109ee5780518252601f1990920191602091820191016109cf565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529050600081805190602001209050610a3e6000801b82610c53565b95945050505050565b6000610a8983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c60565b9392505050565b6000610a8983836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815250610cf7565b6000606060405180602001610ae690610ec5565b601f1982820381018352601f9091011660408181526001600160a01b038716602083810191825282840192835287516060850152875189948994926080909101919085019080838360005b83811015610b49578181015183820152602001610b31565b50505050905090810190601f168015610b765780820380516001836020036101000a031916815260200191505b5093505050506040516020818303038152906040526040516020018083805190602001908083835b60208310610bbd5780518252601f199092019160209182019101610b9e565b51815160209384036101000a600019018019909216911617905285519190930192850191508083835b60208310610c055780518252601f199092019160209182019101610be6565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529050610c4b60008060001b83610d59565b949350505050565b6000610a89838330610e6a565b60008184841115610cef5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610cb4578181015183820152602001610c9c565b50505050905090810190601f168015610ce15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b60008183610d465760405162461bcd60e51b8152602060048201818152835160248401528351909283926044909101919085019080838360008315610cb4578181015183820152602001610c9c565b50828481610d5057fe5b06949350505050565b60008084471015610db1576040805162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b8251610e04576040805162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f604482015290519081900360640190fd5b8383516020850187f590506001600160a01b038116610c4b576040805162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f7900000000000000604482015290519081900360640190fd5b604080516001600160f81b031960208083019190915260609390931b6bffffffffffffffffffffffff191660218201526035810194909452605580850193909352805180850390930183526075909301909252805191012090565b6101f080610ed38339019056fe60806040526040516101f03803806101f08339818101604052604081101561002657600080fd5b81516020830180516040519294929383019291908464010000000082111561004d57600080fd5b90830190602082018581111561006257600080fd5b825164010000000081118282018810171561007c57600080fd5b82525081516020918201929091019080838360005b838110156100a9578181015183820152602001610091565b50505050905090810190601f1680156100d65780820380516001836020036101000a031916815260200191505b506040525050506000826001600160a01b0316826040518082805190602001908083835b602083106101195780518252601f1990920191602091820191016100fa565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855af49150503d8060008114610179576040519150601f19603f3d011682016040523d82523d6000602084013e61017e565b606091505b5050905080610191573d6000803e3d6000fd5b6040805169363d3d373d3d3d363d7360b01b6020808301919091526001600160601b0319606087901b16602a8301526e5af43d82803e903d91602b57fd5bf360881b603e8301528251602d81840381018252604d9093019093528201f3fe4f746f6b656e466163746f72793a204f7074696f6e20616c726561647920637265617465644f746f6b656e466163746f72793a2043616e2774206372656174652065787069726564206f7074696f6e4f746f6b656e466163746f72793a20556e737570706f727465642050726f647563744f746f6b656e466163746f72793a2043616e277420637265617465206120243020737472696b6520707574206f7074696f6e4f746f6b656e466163746f72793a2043616e277420637265617465206f7074696f6e207769746820657870697279203e20323334352f31322f33314f746f6b656e466163746f72793a204f7074696f6e2068617320746f206578706972652030383a303020555443a2646970667358221220b25a2f187fe35f72bc6849abbb13414552e51ba6628328706de6368ce96468fc64736f6c634300060a0033",
  "devdoc": {
    "author": "Opyn Team",
    "details": "Calculate contract address before each creation with CREATE2 and deploy eip-1167 minimal proxies for oToken logic contract",
    "methods": {
      "createOtoken(address,address,address,uint256,uint256,bool)": {
        "details": "deploy an eip-1167 minimal proxy with CREATE2 and register it to the whitelist module",
        "params": {
          "_collateralAsset": "asset that is held as collateral against short/written options",
          "_expiry": "expiration timestamp as a unix timestamp",
          "_isPut": "True if a put option, False if a call option",
          "_strikeAsset": "asset that the strike price is denominated in",
          "_strikePrice": "strike price with decimals = 18",
          "_underlyingAsset": "asset that the option references"
        },
        "returns": {
          "_0": "newOtoken address of the newly created option"
        }
      },
      "getOtoken(address,address,address,uint256,uint256,bool)": {
        "params": {
          "_collateralAsset": "asset that is held as collateral against short/written options",
          "_expiry": "expiration timestamp as a unix timestamp",
          "_isPut": "True if a put option, False if a call option",
          "_strikeAsset": "asset that the strike price is denominated in",
          "_strikePrice": "strike price with decimals = 18",
          "_underlyingAsset": "asset that the option references"
        },
        "returns": {
          "_0": "the address of target otoken."
        }
      },
      "getOtokensLength()": {
        "returns": {
          "_0": "length of the oTokens array"
        }
      },
      "getTargetOtokenAddress(address,address,address,uint256,uint256,bool)": {
        "details": "return the exact address that will be deployed at with _computeAddress",
        "params": {
          "_collateralAsset": "asset that is held as collateral against short/written options",
          "_expiry": "expiration timestamp as a unix timestamp",
          "_isPut": "True if a put option, False if a call option",
          "_strikeAsset": "asset that the strike price is denominated in",
          "_strikePrice": "strike price with decimals = 18",
          "_underlyingAsset": "asset that the option references"
        },
        "returns": {
          "_0": "targetAddress the address this oToken would be deployed at"
        }
      }
    },
    "stateVariables": {
      "MAX_EXPIRY": {
        "details": "max expiry that BokkyPooBahsDateTimeLibrary can handle. (2345/12/31)"
      },
      "idToAddress": {
        "details": "mapping from parameters hash to its deployed address"
      }
    },
    "title": "A factory to create Opyn oTokens"
  },
  "userdoc": {
    "methods": {
      "addressBook()": {
        "notice": "Opyn AddressBook contract that records the address of the Whitelist module and the Otoken impl address. */"
      },
      "createOtoken(address,address,address,uint256,uint256,bool)": {
        "notice": "create new oTokens"
      },
      "getOtoken(address,address,address,uint256,uint256,bool)": {
        "notice": "get the oToken address for an already created oToken, if no oToken has been created with these parameters, it will return address(0)"
      },
      "getOtokensLength()": {
        "notice": "get the total oTokens created by the factory"
      },
      "getTargetOtokenAddress(address,address,address,uint256,uint256,bool)": {
        "notice": "get the address at which a new oToken with these parameters would be deployed"
      },
      "otokens(uint256)": {
        "notice": "array of all created otokens */"
      }
    },
    "notice": "SPDX-License-Identifier: UNLICENSEDCreate new oTokens and keep track of all created tokens"
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7730,
        "contract": "contracts/core/OtokenFactory.sol:OtokenFactory",
        "label": "addressBook",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7734,
        "contract": "contracts/core/OtokenFactory.sol:OtokenFactory",
        "label": "otokens",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7739,
        "contract": "contracts/core/OtokenFactory.sol:OtokenFactory",
        "label": "idToAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  }
}